{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HO_CHUN_WEI\\\\Desktop\\\\web\\\\Jose-Antonio_LoverBus\\\\src\\\\containers\\\\TourPlan.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-dom';\nimport { Tooltip, Form, Checkbox, Input, Layout, Menu, Breadcrumb, Button, Table, Popconfirm, Drawer, Col, Row, Select, Space } from 'antd'; // import Highlighter from 'react-highlight-words';\n// import { SearchOutlined } from '@ant-design/icons';    \n\nimport { ExportOutlined, LockOutlined, UserOutlined, PictureOutlined, EnvironmentOutlined, PlusOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport './TourPlan.css';\nimport usePlan from '../components/usePlan';\nimport { //     // for query\n//     PLAN_QUERY,\nUSERNAME_QUERY, USERPLAN_QUERY //     // for mutation\n//     NEW_PLAN_MUTATION,\n//     RENAME_PLAN_MUTATION,\n, DELETE_PLAN_MUTATION //     NEW_SPOT_MUTATION,\n, DELETE_SPOT_MUTATION, UPDATE_SPOT_STARTTIME_MUTATION, UPDATE_SPOT_ENDTIME_MUTATION //     // for subscription\n} from '../graphql';\nimport background from '../img/place-of-destination.png';\nimport bucketList from '../img/bucket_list.jpg';\nimport pointLeft from '../img/point_left.png';\nconst {\n  SubMenu\n} = Menu;\nconst {\n  Header,\n  Content,\n  Footer,\n  Sider\n} = Layout;\nexport default function TourPlan(props) {\n  _s();\n\n  // const [username, setUsername] = useState(\"\")\n  // const {data:usernameData} = useQuery(USERNAME_QUERY, {variables:{_id:props.match.params.userId}})\n  // const {data:usernameData} = useQuery(USERNAME_QUERY, {variables:{_id:props.match.params.userId}})\n  const {\n    plan: planState,\n    error,\n    username\n  } = usePlan(props.match.params.userId);\n  const [deletePlan] = useMutation(DELETE_PLAN_MUTATION);\n  const [deleteSpot] = useMutation(DELETE_SPOT_MUTATION);\n  const [updateSpotStartTime] = useMutation(UPDATE_SPOT_STARTTIME_MUTATION);\n  const [updateSpotEndTime] = useMutation(UPDATE_SPOT_ENDTIME_MUTATION); // const username = usernameData? usernameData.Username : null\n  // console.log(planState)\n  // console.log(usrename)\n\n  const [showUsermMenu, setShowUsermMenu] = useState(false);\n  const [re, setre] = useState(true);\n  const [currentPlan, setCurrentPlan] = useState(0);\n  const [currentSpot, setCurrentSpot] = useState(0);\n  const [initialPlan, setInitialPlan] = useState(true);\n  const [newTime, setTime] = useState(false);\n  const [newStartTime, setnewStartTime] = useState(\"\");\n  const [newEndTime, setnewEndTime] = useState(\"\");\n  const history = useHistory();\n\n  const backToMap = () => {\n    history.push(`/${props.match.params.userId}`);\n  };\n\n  const logout = () => {\n    history.push(\"/\");\n  };\n\n  const handleStartChange = ev => {\n    if (!ev.target['validity'].valid) return;\n    const dt = ev.target['value'] + ':00Z';\n    setnewStartTime(dt); // console.log(dt)\n  };\n\n  const handleEndChange = ev => {\n    if (!ev.target['validity'].valid) return;\n    const dt = ev.target['value'] + ':00Z';\n    setnewEndTime(dt); // console.log(dt)\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        className: \"header\",\n        style: {\n          color: \"white\",\n          fontSize: \"20px\",\n          margin: \"0px\"\n        },\n        children: [\"Tour Plan\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          theme: \"dark\",\n          mode: \"horizontal\",\n          defaultSelectedKeys: ['2'],\n          children: /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 38\n            }, this),\n            style: {\n              position: 'absolute',\n              width: '150px',\n              textAlign: 'center',\n              right: '0%'\n            },\n            onClick: () => {\n              setShowUsermMenu(!showUsermMenu);\n            },\n            children: username\n          }, \"4\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        className: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(Sider, {\n          height: 500,\n          width: 200,\n          className: \"site-layout-background\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            mode: \"inline\",\n            defaultSelectedKeys: ['1'],\n            defaultOpenKeys: ['sub1'],\n            style: {\n              height: '100%',\n              borderRight: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(SubMenu, {\n              icon: /*#__PURE__*/_jsxDEV(EnvironmentOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 43\n              }, this),\n              title: \"My Plans\",\n              children: planState.map(({\n                title\n              }, i) => /*#__PURE__*/_jsxDEV(Menu.Item, {\n                onClick: () => {\n                  setCurrentPlan(i);\n                  setInitialPlan(false);\n                },\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [title, /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"deletePlan\",\n                  type: \"dashed\",\n                  size: \"small\",\n                  style: {\n                    position: \"absolute\",\n                    right: \"10px\",\n                    fontSize: \"5px\"\n                  },\n                  onClick: () => {\n                    deletePlan({\n                      variables: {\n                        _id: planState[i]._id\n                      }\n                    });\n                    setre(!re); // console.log(planState)\n                  },\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this))\n            }, \"sub1\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Layout, {\n          style: {\n            padding: '0 24px 24px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            style: {\n              margin: '16px 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n              children: \"Plan List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), !planState || planState.length === 0 ? /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 58\n            }, this) : /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n              children: planState[currentPlan].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Content, {\n            className: \"site-layout-background\",\n            style: {\n              padding: 24,\n              margin: 0,\n              minHeight: 280\n            },\n            children: [initialPlan && !(!planState || planState.length === 0) ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  margin: \"0px\",\n                  position: \"relative\",\n                  left: \"0px\"\n                },\n                children: \"Choose a Plan in the Left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  width: \"100px\"\n                },\n                src: pointLeft,\n                alt: \"pointLeft\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-title\",\n                children: !planState || planState.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 66\n                }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    margin: \"0px\",\n                    position: \"relative\",\n                    left: \"0px\"\n                  },\n                  children: [\" \", planState[currentPlan].title, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 78\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this), !planState || planState.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-title\",\n                style: {\n                  textAlign: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  style: {\n                    fontFamily: \"fantasy\"\n                  },\n                  children: \" No Plan Right Now \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: bucketList,\n                  alt: \"Bucket List\",\n                  style: {\n                    width: \"500px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: planState[currentPlan].spots.length !== 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table-fill\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"spot-title\",\n                        children: \"Title\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 41\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"spot-description\",\n                        children: \"Description\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 41\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Time\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 41\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"spot-button\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 41\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 37\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: planState[currentPlan].spots.map((e, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"spot-title\",\n                        children: [\" \", e.location.properties.title, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"spot-description\",\n                        children: [\" \", e.location.properties.description, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"spot-time\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: new Date(e.startTime).toLocaleString()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 45\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"timeto\",\n                          children: \"to\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 175,\n                          columnNumber: 45\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: new Date(e.endTime).toLocaleString()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 176,\n                          columnNumber: 45\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"spot-button\",\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => {\n                            setTime(true);\n                            setCurrentSpot(i);\n                          },\n                          style: {\n                            width: \"100px\",\n                            textAlign: \"center\",\n                            fontSize: \"10px\"\n                          },\n                          children: \" Edit Time\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 179,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n                          children: /*#__PURE__*/_jsxDEV(Drawer, {\n                            title: planState[currentPlan].spots[currentSpot].location.properties.title,\n                            width: 360,\n                            onClose: () => {\n                              setTime(false);\n                            },\n                            visible: newTime,\n                            bodyStyle: {\n                              paddingBottom: 80\n                            },\n                            footer: /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                textAlign: 'right'\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Button, {\n                                onClick: () => {\n                                  setTime(false);\n                                },\n                                style: {\n                                  marginRight: 8\n                                },\n                                children: \"Cancel\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 195,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                                onClick: () => {\n                                  updateSpotStartTime({\n                                    variables: {\n                                      _id: planState[currentPlan].spots[currentSpot]._id,\n                                      time: new Date(newStartTime).toString()\n                                    }\n                                  });\n                                  updateSpotEndTime({\n                                    variables: {\n                                      _id: planState[currentPlan].spots[currentSpot]._id,\n                                      time: new Date(newEndTime).toString()\n                                    }\n                                  });\n                                  setTime(false); // setre(!re)\n\n                                  console.log(new Date(newStartTime).toString(), new Date(newEndTime).toString());\n                                },\n                                type: \"primary\",\n                                children: \"Change Time\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 199,\n                                columnNumber: 61\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 190,\n                              columnNumber: 61\n                            }, this),\n                            children: /*#__PURE__*/_jsxDEV(Form, {\n                              layout: \"vertical\",\n                              hideRequiredMark: true,\n                              children: [/*#__PURE__*/_jsxDEV(Row, {\n                                gutter: 16,\n                                children: /*#__PURE__*/_jsxDEV(Col, {\n                                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                                    name: \"Start time\",\n                                    label: \"Start time\",\n                                    rules: [{\n                                      required: true,\n                                      message: 'Please enter new start time'\n                                    }],\n                                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                                      type: \"datetime-local\",\n                                      name: \"start time\",\n                                      value: (newStartTime || '').toString().substring(0, 16),\n                                      onChange: handleStartChange\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 226,\n                                      columnNumber: 73\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 221,\n                                    columnNumber: 69\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 220,\n                                  columnNumber: 65\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 219,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                                gutter: 16,\n                                children: /*#__PURE__*/_jsxDEV(Col, {\n                                  children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                                    name: \"End time\",\n                                    label: \"End time\",\n                                    rules: [{\n                                      required: true,\n                                      message: 'Please enter new end time'\n                                    }],\n                                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                                      type: \"datetime-local\",\n                                      name: \"end time\",\n                                      value: (newEndTime || '').toString().substring(0, 16),\n                                      onChange: handleEndChange\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 241,\n                                      columnNumber: 73\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 236,\n                                    columnNumber: 69\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 235,\n                                  columnNumber: 65\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 234,\n                                columnNumber: 61\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 218,\n                              columnNumber: 57\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 183,\n                            columnNumber: 53\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => {\n                            // var temp = planState\n                            // temp[currentPlan].spots.splice(i, 1)\n                            // setPlan(temp)\n                            setre(!re);\n                            deleteSpot({\n                              variables: {\n                                _id: planState[currentPlan].spots[currentSpot]._id\n                              }\n                            });\n                          },\n                          style: {\n                            width: \"100px\",\n                            textAlign: \"center\",\n                            fontSize: \"10px\"\n                          },\n                          children: \" Delete Spot\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 252,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 45\n                      }, this)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 41\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 33\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-title\",\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    style: {\n                      fontFamily: \"fantasy\"\n                    },\n                    children: \" No Spot Right Now \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: background,\n                    alt: \"Background\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this), showUsermMenu ?\n            /*#__PURE__*/\n            //show menu if click account button\n            _jsxDEV(\"div\", {\n              style: {\n                position: \"absolute\",\n                width: '150px',\n                textAlign: 'center',\n                top: \"65px\",\n                right: '0%',\n                hidden: 'true'\n              },\n              zindex: -1,\n              children: /*#__PURE__*/_jsxDEV(Menu, {\n                theme: \"blue\",\n                mode: \"vertical\",\n                children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n                  icon: /*#__PURE__*/_jsxDEV(EnvironmentOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 32\n                  }, this),\n                  style: {\n                    margin: '0px',\n                    textAlign: 'left',\n                    position: \"relative\",\n                    left: \"23px\"\n                  },\n                  onClick: backToMap,\n                  children: \"Tour Map\"\n                }, \"1\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n                  icon: /*#__PURE__*/_jsxDEV(ExportOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 32\n                  }, this),\n                  style: {\n                    margin: '0px',\n                    textAlign: 'left',\n                    position: \"relative\",\n                    left: \"23px\"\n                  },\n                  onClick: logout,\n                  children: \"logout\"\n                }, \"2\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TourPlan, \"gAh+3vwnOqLiwTfFuTJ0B9r3ZFE=\", false, function () {\n  return [usePlan, useMutation, useMutation, useMutation, useMutation, useHistory];\n});\n\n_c = TourPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"TourPlan\");","map":{"version":3,"sources":["C:/Users/HO_CHUN_WEI/Desktop/web/Jose-Antonio_LoverBus/src/containers/TourPlan.js"],"names":["React","useContext","useState","useEffect","useRef","useQuery","useMutation","useHistory","Tooltip","Form","Checkbox","Input","Layout","Menu","Breadcrumb","Button","Table","Popconfirm","Drawer","Col","Row","Select","Space","ExportOutlined","LockOutlined","UserOutlined","PictureOutlined","EnvironmentOutlined","PlusOutlined","usePlan","USERNAME_QUERY","USERPLAN_QUERY","DELETE_PLAN_MUTATION","DELETE_SPOT_MUTATION","UPDATE_SPOT_STARTTIME_MUTATION","UPDATE_SPOT_ENDTIME_MUTATION","background","bucketList","pointLeft","SubMenu","Header","Content","Footer","Sider","TourPlan","props","plan","planState","error","username","match","params","userId","deletePlan","deleteSpot","updateSpotStartTime","updateSpotEndTime","showUsermMenu","setShowUsermMenu","re","setre","currentPlan","setCurrentPlan","currentSpot","setCurrentSpot","initialPlan","setInitialPlan","newTime","setTime","newStartTime","setnewStartTime","newEndTime","setnewEndTime","history","backToMap","push","logout","handleStartChange","ev","target","valid","dt","handleEndChange","color","fontSize","margin","position","width","textAlign","right","height","borderRight","map","title","i","display","alignItems","variables","_id","padding","length","minHeight","left","fontFamily","spots","e","location","properties","description","Date","startTime","toLocaleString","endTime","paddingBottom","marginRight","time","toString","console","log","required","message","substring","top","hidden"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Tooltip, Form, Checkbox, Input, Layout, Menu, Breadcrumb, Button, Table, Popconfirm,\r\n    Drawer, Col, Row, Select, Space} from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\n// import { SearchOutlined } from '@ant-design/icons';    \r\nimport { ExportOutlined, LockOutlined, UserOutlined, PictureOutlined, EnvironmentOutlined, PlusOutlined} from '@ant-design/icons';\r\nimport 'antd/dist/antd.css'\r\nimport './TourPlan.css'\r\nimport usePlan from '../components/usePlan'\r\nimport {\r\n//     // for query\r\n//     PLAN_QUERY,\r\n    USERNAME_QUERY,\r\n    USERPLAN_QUERY,\r\n//     // for mutation\r\n//     NEW_PLAN_MUTATION,\r\n//     RENAME_PLAN_MUTATION,\r\n    DELETE_PLAN_MUTATION,\r\n//     NEW_SPOT_MUTATION,\r\n    DELETE_SPOT_MUTATION,\r\n    UPDATE_SPOT_STARTTIME_MUTATION,\r\n    UPDATE_SPOT_ENDTIME_MUTATION,\r\n//     // for subscription\r\n  } from '../graphql'\r\nimport background from '../img/place-of-destination.png';\r\nimport bucketList from '../img/bucket_list.jpg';\r\nimport pointLeft from '../img/point_left.png';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nexport default function TourPlan(props){\r\n    // const [username, setUsername] = useState(\"\")\r\n    // const {data:usernameData} = useQuery(USERNAME_QUERY, {variables:{_id:props.match.params.userId}})\r\n    // const {data:usernameData} = useQuery(USERNAME_QUERY, {variables:{_id:props.match.params.userId}})\r\n    const {plan:planState, error, username} = usePlan(props.match.params.userId)\r\n\r\n    const [deletePlan] = useMutation(DELETE_PLAN_MUTATION)\r\n    const [deleteSpot] = useMutation(DELETE_SPOT_MUTATION)\r\n    const [updateSpotStartTime] = useMutation(UPDATE_SPOT_STARTTIME_MUTATION)\r\n    const [updateSpotEndTime] = useMutation(UPDATE_SPOT_ENDTIME_MUTATION)\r\n\r\n    // const username = usernameData? usernameData.Username : null\r\n    // console.log(planState)\r\n    // console.log(usrename)\r\n    const [showUsermMenu, setShowUsermMenu] = useState(false)\r\n    const [re, setre] = useState(true)\r\n    const [currentPlan, setCurrentPlan] = useState(0)\r\n    const [currentSpot, setCurrentSpot] = useState(0)\r\n    const [initialPlan, setInitialPlan] = useState(true)\r\n    const [newTime, setTime] = useState(false)\r\n    const [newStartTime, setnewStartTime] = useState(\"\")\r\n    const [newEndTime, setnewEndTime] = useState(\"\")\r\n\r\n    const history = useHistory();\r\n    const backToMap = () => {\r\n         history.push(`/${props.match.params.userId}`)\r\n    }\r\n    const logout = () => {\r\n         history.push(\"/\")\r\n    }\r\n    \r\n    const handleStartChange = (ev) => {\r\n        if (!ev.target['validity'].valid) return;\r\n        const dt = ev.target['value'] + ':00Z';\r\n        setnewStartTime(dt);\r\n        // console.log(dt)\r\n    }\r\n    const handleEndChange = (ev) => {\r\n        if (!ev.target['validity'].valid) return;\r\n        const dt = ev.target['value'] + ':00Z';\r\n        setnewEndTime(dt);\r\n        // console.log(dt)\r\n      }\r\n    return (\r\n        <React.Fragment>\r\n            <Layout>\r\n            <Header className=\"header\" style={{color: \"white\", fontSize: \"20px\", margin: \"0px\"}}>Tour Plan\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item icon={<UserOutlined />} key=\"4\" style={{position:'absolute', width: '150px',textAlign: 'center', right: '0%'}} onClick={() => {setShowUsermMenu(!showUsermMenu)}}>\r\n                        {username}\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n            <Layout className='middle'>\r\n            <Sider height={500} width={200} className=\"site-layout-background\">\r\n                <Menu\r\n                mode=\"inline\"\r\n                defaultSelectedKeys={['1']}\r\n                defaultOpenKeys={['sub1']}\r\n                style={{ height: '100%', borderRight: 0}}\r\n                >\r\n                <SubMenu key=\"sub1\" icon={<EnvironmentOutlined />} title=\"My Plans\">\r\n                    {\r\n                      planState.map(({ title }, i) => (\r\n                        <Menu.Item onClick={() => {\r\n                            setCurrentPlan(i)\r\n                            setInitialPlan(false)\r\n                        }} style={{display: \"flex\", alignItems: \"center\"}}>\r\n                            {title}\r\n                            <Button \r\n                            className=\"deletePlan\"\r\n                            type=\"dashed\"\r\n                            size=\"small\"\r\n                            style={{position: \"absolute\", right: \"10px\", fontSize: \"5px\"}}\r\n                            onClick={() => {\r\n                                deletePlan({variables:{\r\n                                    _id: planState[i]._id\r\n                                  }})\r\n                                setre(!re)\r\n                                // console.log(planState)\r\n                            }}\r\n                            >x</Button>\r\n                        </Menu.Item>\r\n                      ))\r\n                    }\r\n                </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout style={{ padding: '0 24px 24px' }}>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item>Plan List</Breadcrumb.Item>\r\n                {(!planState || planState.length === 0)?(<Breadcrumb.Item></Breadcrumb.Item>)\r\n                :(<Breadcrumb.Item>{planState[currentPlan].title}</Breadcrumb.Item>)}   \r\n                </Breadcrumb>\r\n                <Content\r\n                className=\"site-layout-background\"\r\n                style={{\r\n                    padding: 24,\r\n                    margin: 0,\r\n                    minHeight: 280,\r\n                }}\r\n                >\r\n                    {(initialPlan && !(!planState || planState.length === 0))?(\r\n                        <React.Fragment>\r\n                            <h3 style={{margin: \"0px\", position: \"relative\", left: \"0px\"}}>Choose a Plan in the Left</h3> \r\n                            <br></br>\r\n                            <br></br>\r\n                            <img style={{width: \"100px\"}} src={pointLeft} alt=\"pointLeft\"/>\r\n                        </React.Fragment>\r\n                        ):\r\n                        (\r\n                    <React.Fragment>\r\n                    <div className=\"table-title\">\r\n                        {(!planState || planState.length === 0)?(<h3></h3>):(<h3 style={{margin: \"0px\", position: \"relative\", left: \"0px\"}}> {planState[currentPlan].title} </h3>)}\r\n                    </div>\r\n                    {((!planState || planState.length === 0)?(\r\n                        <div className=\"table-title\" style={{textAlign: \"center\"}}> \r\n                            <h2 style={{fontFamily: \"fantasy\"}}> No Plan Right Now </h2> \r\n                            <br></br>\r\n                            <img src={bucketList} alt=\"Bucket List\" style={{width: \"500px\"}}/>\r\n                        </div>):\r\n                        (<React.Fragment>\r\n                            {(planState[currentPlan].spots.length !== 0)?(\r\n                                <table className=\"table-fill\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className='spot-title' >Title</th>\r\n                                        <th className='spot-description' >Description</th>\r\n                                        <th >Time</th>\r\n                                        <th className='spot-button'></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {planState[currentPlan].spots.map((e, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className='spot-title' > {e.location.properties.title} </td>\r\n                                            <td className='spot-description' > {e.location.properties.description} </td>\r\n                                            <td className='spot-time' >\r\n                                            <p>{new Date(e.startTime).toLocaleString()}</p>\r\n                                            <p className=\"timeto\">to</p>\r\n                                            <p>{new Date(e.endTime).toLocaleString()}</p> \r\n                                            </td>\r\n                                            <td className='spot-button'>\r\n                                                <Button onClick={() => {setTime(true)\r\n                                                setCurrentSpot(i)}} \r\n                                                style={{width:\"100px\", textAlign: \"center\", fontSize: \"10px\"}}> Edit Time</Button>\r\n                                                <React.Fragment>\r\n                                                    <Drawer\r\n                                                        title={planState[currentPlan].spots[currentSpot].location.properties.title}\r\n                                                        width={360}\r\n                                                        onClose={() => {setTime(false)}}\r\n                                                        visible={newTime}\r\n                                                        bodyStyle={{ paddingBottom: 80 }}\r\n                                                        footer={\r\n                                                            <div\r\n                                                                style={{\r\n                                                                    textAlign: 'right',\r\n                                                            }}\r\n                                                        >\r\n                                                            <Button onClick={() => {setTime(false)}} style={{ marginRight: 8 }}>\r\n                                                                Cancel\r\n                                                            </Button>\r\n                                                            {/* <Button onClick={registerAccount} */}\r\n                                                            <Button onClick={() => {\r\n                                                                updateSpotStartTime({variables:{\r\n                                                                    _id: planState[currentPlan].spots[currentSpot]._id,\r\n                                                                    time: new Date(newStartTime).toString()\r\n                                                                }})\r\n                                                                updateSpotEndTime({variables:{\r\n                                                                    _id: planState[currentPlan].spots[currentSpot]._id,\r\n                                                                    time: new Date(newEndTime).toString()\r\n                                                                }})\r\n                                                                setTime(false)\r\n                                                                // setre(!re)\r\n                                                                console.log(new Date(newStartTime).toString(), new Date(newEndTime).toString())\r\n                                                            }}\r\n                                                                type=\"primary\">\r\n                                                                Change Time\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    }\r\n                                                    >\r\n                                                        <Form layout=\"vertical\" hideRequiredMark>\r\n                                                            <Row gutter={16}>\r\n                                                                <Col>\r\n                                                                    <Form.Item\r\n                                                                        name=\"Start time\"\r\n                                                                        label=\"Start time\"\r\n                                                                        rules={[{ required: true, message: 'Please enter new start time' }]}\r\n                                                                        >\r\n                                                                        <input \r\n                                                                            type=\"datetime-local\"\r\n                                                                            name=\"start time\"\r\n                                                                            value={(newStartTime || '').toString().substring(0, 16)}\r\n                                                                            onChange={handleStartChange} />\r\n                                                                    </Form.Item>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                            <Row gutter={16}>\r\n                                                                <Col>\r\n                                                                    <Form.Item\r\n                                                                        name=\"End time\"\r\n                                                                        label=\"End time\"\r\n                                                                        rules={[{ required: true, message: 'Please enter new end time' }]}\r\n                                                                        >\r\n                                                                        <input \r\n                                                                            type=\"datetime-local\"\r\n                                                                            name=\"end time\"\r\n                                                                            value={(newEndTime || '').toString().substring(0, 16)}\r\n                                                                            onChange={handleEndChange} />\r\n                                                                    </Form.Item>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Form>\r\n                                                    </Drawer>\r\n                                                </React.Fragment>\r\n                                                <Button onClick={()=>{\r\n                                                    // var temp = planState\r\n                                                    // temp[currentPlan].spots.splice(i, 1)\r\n                                                    // setPlan(temp)\r\n                                                    setre(!re)\r\n                                                    deleteSpot({variables:{\r\n                                                        _id: planState[currentPlan].spots[currentSpot]._id\r\n                                                    }})                \r\n                                                }} style={{width:\"100px\", textAlign: \"center\", fontSize: \"10px\"}}> Delete Spot</Button> \r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>):(\r\n                                <div className=\"table-title\" style={{textAlign: \"center\"}}> \r\n                                    <h2 style={{fontFamily: \"fantasy\"}}> No Spot Right Now </h2> \r\n                                    <img src={background} alt=\"Background\"/>\r\n                                </div>\r\n                                )}\r\n                        </React.Fragment>))} \r\n                        </React.Fragment>              \r\n                    )\r\n                    }\r\n                \r\n                {showUsermMenu?( //show menu if click account button\r\n                <div style={{position: \"absolute\", width: '150px', textAlign: 'center',top: \"65px\", right: '0%', hidden: 'true'}} zindex={-1}>\r\n                    <Menu theme=\"blue\" mode=\"vertical\">\r\n                    <Menu.Item \r\n                        icon ={<EnvironmentOutlined/>}\r\n                        key=\"1\" style={{margin: '0px', textAlign: 'left', position: \"relative\", left: \"23px\"}} onClick={backToMap}>\r\n                        Tour Map\r\n                    </Menu.Item>\r\n                    <Menu.Item \r\n                        icon ={<ExportOutlined/>}\r\n                        key=\"2\" style={{margin: '0px', textAlign: 'left', position: \"relative\", left: \"23px\"}} onClick={logout}>\r\n                        logout\r\n                    </Menu.Item>\r\n                    </Menu>\r\n                </div>):null\r\n                }\r\n                </Content>\r\n            </Layout>\r\n            </Layout>\r\n            </Layout>\r\n        </React.Fragment>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}