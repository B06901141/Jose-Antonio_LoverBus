{"ast":null,"code":"import _toConsumableArray from\"C:/Users/HO_CHUN_WEI/Desktop/web/Jose-Antonio_LoverBus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useEffect,useRef,useState}from\"react\";import{useQuery,useMutation}from'@apollo/react-hooks';import{//     // for query\n//     MARKER_QUERY,\n//     PLAN_QUERY,\nUSERNAME_QUERY,USERPLAN_QUERY,PLAN_SUBSCRIPTION// SIGNIN_QUERY,\n//     // for mutation\n//     ADD_MARKER_MUTATION,\n//     DELETE_MARKER_MUTATION,\n//     UPDATE_MARKER_MUTATION,\n//     NEW_PLAN_MUTATION,\n//     RENAME_PLAN_MUTATION,\n//     DELETE_PLAN_MUTATION,\n//     NEW_SPOT_MUTATION,\n//     delete_Spot_MUTATION,\n//     UPDATE_SPOTSTARTTIME_MUTATION,\n//     UPDATE_SPOTENDTIME_MUTATION,\n// SIGNUP_MUTATION\n//     // for subscription\n}from'../graphql';export default function usePlan(_userId){var _useQuery=useQuery(USERPLAN_QUERY,{variables:{_userId:_userId}}),planList=_useQuery.data,error=_useQuery.error,subscribeToMore=_useQuery.subscribeToMore;var _useQuery2=useQuery(USERNAME_QUERY,{variables:{_id:_userId}}),usernameData=_useQuery2.data;var username=usernameData?usernameData.Username:\"\";var plan=planList?planList.UserPlan:[];useEffect(function(){subscribeToMore({document:PLAN_SUBSCRIPTION,variables:{username:username},updateQuery:function updateQuery(prev,_ref){var subscriptionData=_ref.subscriptionData;var newData=subscriptionData.data.subscribePlan;var newArray;var prev_item=prev?prev.UserPlan:[];switch(newData.mutation){case\"NEW\":return{UserPlan:[].concat(_toConsumableArray(prev_item),[newData.data])};break;case\"DELETE\":newArray=prev.UserPlan.filter(function(e){return e._id!==newData.data._id;});return{UserPlan:newArray};break;case\"UPDATE\":newArray=prev.UserPlan.map(function(e){if(e.title!==newData.data.title)return e;return newData.data;});return{\"UserPlan\":newArray};break;default:console.log(\"Warning: unknown mutation \".concat(newData.mutation));break;}}});},[username,subscribeToMore]);return{plan:plan,error:error,username:username};}","map":{"version":3,"sources":["C:/Users/HO_CHUN_WEI/Desktop/web/Jose-Antonio_LoverBus/src/components/usePlan.js"],"names":["React","useEffect","useRef","useState","useQuery","useMutation","USERNAME_QUERY","USERPLAN_QUERY","PLAN_SUBSCRIPTION","usePlan","_userId","variables","planList","data","error","subscribeToMore","_id","usernameData","username","Username","plan","UserPlan","document","updateQuery","prev","subscriptionData","newData","subscribePlan","newArray","prev_item","mutation","filter","e","map","title","console","log"],"mappings":"qLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,qBAAtC,CAEA,OACA;AACA;AACA;AACIC,cAJJ,CAKIC,cALJ,CAMIC,iBACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACJ;AApBA,KAqBS,YArBT,CAuBA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,OAAjB,CAAyB,eACYN,QAAQ,CAACG,cAAD,CAAiB,CAACI,SAAS,CAAC,CAACD,OAAO,CAACA,OAAT,CAAX,CAAjB,CADpB,CACxBE,QADwB,WAC7BC,IAD6B,CACdC,KADc,WACdA,KADc,CACPC,eADO,WACPA,eADO,gBAERX,QAAQ,CAACE,cAAD,CAAiB,CAACK,SAAS,CAAC,CAACK,GAAG,CAACN,OAAL,CAAX,CAAjB,CAFA,CAExBO,YAFwB,YAE7BJ,IAF6B,CAGpC,GAAMK,CAAAA,QAAQ,CAAGD,YAAY,CAAEA,YAAY,CAACE,QAAf,CAA0B,EAAvD,CACA,GAAMC,CAAAA,IAAI,CAAGR,QAAQ,CAAEA,QAAQ,CAACS,QAAX,CAAsB,EAA3C,CACApB,SAAS,CAAC,UAAI,CACVc,eAAe,CAAC,CACZO,QAAQ,CAAEd,iBADE,CAEZG,SAAS,CAAE,CAACO,QAAQ,CAAEA,QAAX,CAFC,CAGZK,WAAW,CAAE,qBAACC,IAAD,MAAgC,IAAvBC,CAAAA,gBAAuB,MAAvBA,gBAAuB,CACzC,GAAMC,CAAAA,OAAO,CAAGD,gBAAgB,CAACZ,IAAjB,CAAsBc,aAAtC,CACA,GAAIC,CAAAA,QAAJ,CACA,GAAMC,CAAAA,SAAS,CAAGL,IAAI,CAAGA,IAAI,CAACH,QAAR,CAAmB,EAAzC,CACA,OAAOK,OAAO,CAACI,QAAf,EACI,IAAK,KAAL,CACI,MAAO,CAACT,QAAQ,8BAAKQ,SAAL,GAAgBH,OAAO,CAACb,IAAxB,EAAT,CAAP,CACJ,MACA,IAAK,QAAL,CACIe,QAAQ,CAAGJ,IAAI,CAACH,QAAL,CAAcU,MAAd,CAAqB,SAAAC,CAAC,QAAEA,CAAAA,CAAC,CAAChB,GAAF,GAAUU,OAAO,CAACb,IAAR,CAAaG,GAAzB,EAAtB,CAAX,CACA,MAAO,CAACK,QAAQ,CAACO,QAAV,CAAP,CACJ,MACA,IAAK,QAAL,CACIA,QAAQ,CAAGJ,IAAI,CAACH,QAAL,CAAcY,GAAd,CAAkB,SAAAD,CAAC,CAAE,CAC5B,GAAGA,CAAC,CAACE,KAAF,GAAYR,OAAO,CAACb,IAAR,CAAaqB,KAA5B,CACI,MAAOF,CAAAA,CAAP,CACJ,MAAON,CAAAA,OAAO,CAACb,IAAf,CACH,CAJU,CAAX,CAKA,MAAO,CAAC,WAAWe,QAAZ,CAAP,CACJ,MACA,QACIO,OAAO,CAACC,GAAR,qCAAyCV,OAAO,CAACI,QAAjD,GACJ,MAlBJ,CAoBH,CA3BW,CAAD,CAAf,CA6BH,CA9BQ,CA8BN,CAACZ,QAAD,CAAWH,eAAX,CA9BM,CAAT,CA+BA,MAAO,CAACK,IAAI,CAAJA,IAAD,CAAON,KAAK,CAALA,KAAP,CAAcI,QAAQ,CAARA,QAAd,CAAP,CACH","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\n\r\nimport {\r\n//     // for query\r\n//     MARKER_QUERY,\r\n//     PLAN_QUERY,\r\n    USERNAME_QUERY,\r\n    USERPLAN_QUERY,\r\n    PLAN_SUBSCRIPTION\r\n    // SIGNIN_QUERY,\r\n//     // for mutation\r\n//     ADD_MARKER_MUTATION,\r\n//     DELETE_MARKER_MUTATION,\r\n//     UPDATE_MARKER_MUTATION,\r\n//     NEW_PLAN_MUTATION,\r\n//     RENAME_PLAN_MUTATION,\r\n//     DELETE_PLAN_MUTATION,\r\n//     NEW_SPOT_MUTATION,\r\n//     delete_Spot_MUTATION,\r\n//     UPDATE_SPOTSTARTTIME_MUTATION,\r\n//     UPDATE_SPOTENDTIME_MUTATION,\r\n    // SIGNUP_MUTATION\r\n//     // for subscription\r\n  } from '../graphql'\r\n\r\nexport default function usePlan(_userId){\r\n    const {data:planList, error, subscribeToMore} = useQuery(USERPLAN_QUERY, {variables:{_userId:_userId}})\r\n    const {data:usernameData} = useQuery(USERNAME_QUERY, {variables:{_id:_userId}})\r\n    const username = usernameData? usernameData.Username : \"\"\r\n    const plan = planList? planList.UserPlan : []\r\n    useEffect(()=>{\r\n        subscribeToMore({\r\n            document: PLAN_SUBSCRIPTION,\r\n            variables: {username: username},\r\n            updateQuery: (prev, { subscriptionData }) => {\r\n                const newData = subscriptionData.data.subscribePlan\r\n                var newArray\r\n                const prev_item = prev ? prev.UserPlan : []\r\n                switch(newData.mutation){\r\n                    case \"NEW\":\r\n                        return {UserPlan:[...prev_item, newData.data]}\r\n                    break\r\n                    case \"DELETE\":\r\n                        newArray = prev.UserPlan.filter(e=>e._id !== newData.data._id)\r\n                        return {UserPlan:newArray}\r\n                    break\r\n                    case \"UPDATE\":\r\n                        newArray = prev.UserPlan.map(e=>{\r\n                            if(e.title !== newData.data.title)\r\n                                return e\r\n                            return newData.data\r\n                        })\r\n                        return {\"UserPlan\":newArray}\r\n                    break\r\n                    default:\r\n                        console.log(`Warning: unknown mutation ${newData.mutation}`)\r\n                    break\r\n                }\r\n            }\r\n        })\r\n    }, [username, subscribeToMore])\r\n    return {plan, error, username}\r\n}"]},"metadata":{},"sourceType":"module"}