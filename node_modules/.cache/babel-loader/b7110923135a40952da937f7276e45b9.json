{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HO_CHUN_WEI\\\\Desktop\\\\web\\\\Jose-Antonio_LoverBus\\\\src\\\\components\\\\Mapbox_TW.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport mapboxgl from \"mapbox-gl\";\nimport * as MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport { Button } from 'antd';\nimport \"./site.css\";\nimport env from \"react-dotenv\";\nimport { // for query\nMARKER_QUERY // for mutation\n// ADD_MARKER_MUTATION,\n// DELETE_MARKER_MUTATION,\n// UPDATE_MARKER_MUTATION,\n// for subscription\n, MARKERS_SUBSCRIPTION } from '../graphql';\nmapboxgl.accessToken = process.env.REACT_APP_ACCESS_TOKEM;\nconsole.log(mapboxgl.accessToken);\n\nconst MapBox = ({\n  username,\n  markerCallback,\n  insertionMode,\n  setInsertionMode,\n  title,\n  setTitle,\n  description,\n  setDescription\n}) => {\n  _s();\n\n  const [View, setView] = useState({\n    lng: 121.55,\n    lat: 25.05,\n    zoom: 12\n  });\n  const {\n    subscribeMarker,\n    ...markers\n  } = useQuery(MARKER_QUERY, {\n    variables: {\n      username: username\n    }\n  }); // const [insertionMode, setInsertionMode] = useState(false)\n\n  const [map, setMap] = useState(null);\n  const mapContainer = useRef(null);\n  const {\n    data,\n    subscribeToMore\n  } = useQuery(MARKER_QUERY, {\n    variables: {\n      username: username\n    }\n  });\n  const [currentMarker, _setCurrentMarker] = useState(null);\n\n  const setCurrentMarker = e => {\n    _setCurrentMarker(e);\n\n    markerCallback(e);\n  };\n\n  const [test, setTest] = useState(0);\n  const [markerLoaded, setMarkerLoaded] = useState(false);\n  useEffect(() => {\n    const initializeMap = ({\n      setMap,\n      mapContainer\n    }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        // stylesheet location\n        center: [View.lng, View.lat],\n        zoom: View.zoom\n      });\n      map.on(\"move\", () => {\n        setView({\n          lng: map.getCenter().lng.toFixed(4),\n          lat: map.getCenter().lat.toFixed(4),\n          zoom: map.getZoom().toFixed(2)\n        });\n        setTest(4);\n      });\n      map.on(\"load\", () => {\n        setMap(map);\n        map.resize();\n      });\n      var geocoder = new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken,\n        mapboxgl: mapboxgl\n      });\n      map.geocoder = geocoder;\n      map.addControl(geocoder); // map.addControl(\n      //     new MapboxGeocoder({\n      //     accessToken: mapboxgl.accessToken,\n      //     mapboxgl: mapboxgl\n      //     })\n      // );  \n    };\n\n    if (!map) initializeMap({\n      setMap,\n      mapContainer\n    });\n  }, [map]);\n  useEffect(() => {\n    if (!map) return;\n    map.geocoder.on(\"result\", () => {\n      if (currentMarker) {\n        if (currentMarker.geocoderResult || insertionMode) {\n          currentMarker.remove();\n        }\n      }\n\n      setInsertionMode(false);\n      setTitle(JSON.parse(map.geocoder.lastSelected).place_name);\n      const linLat = map.geocoder.mapMarker._lngLat;\n      map.geocoder.mapMarker.remove();\n      var marker = new mapboxgl.Marker().setLngLat(linLat).addTo(map);\n      marker.geocoderResult = true;\n      setCurrentMarker(marker);\n    });\n  }, [map, currentMarker]);\n  useEffect(() => {\n    if (map && insertionMode) {\n      const clickPoint = e => {\n        if (currentMarker) currentMarker.remove();\n        var marker = new mapboxgl.Marker().setLngLat([e.lngLat.lng, e.lngLat.lat]).addTo(map);\n        setTitle(\"\");\n        setDescription(\"\");\n        setCurrentMarker(marker);\n      };\n\n      map.once('click', clickPoint);\n      return () => {\n        map.off('click', clickPoint);\n      };\n    } // else if(map && !insertionMode && currentMarker){\n    //     currentMarker.remove()\n    //     setCurrentMarker(null)\n    // }\n\n  }, [map, insertionMode, currentMarker]);\n\n  if (map && data && !markerLoaded) {\n    setMarkerLoaded(true);\n    data.Marker.map(e => {\n      const linLat = e.geometry.coordinates;\n      var popup = new mapboxgl.Popup().setHTML(`<h3>${e.properties.title}<h3><p>${e.properties.description}</p>`);\n      var marker = new mapboxgl.Marker().setLngLat(linLat).setPopup(popup).addTo(map);\n      marker._id = e._id;\n      marker.getElement().addEventListener('click', () => {\n        setCurrentMarker(marker);\n        setTitle(e.properties.title);\n        setDescription(e.properties.description);\n      });\n    });\n  }\n\n  useEffect(() => {\n    if (!subscribeToMore || !map) return;\n    subscribeToMore({\n      document: MARKERS_SUBSCRIPTION,\n      variables: {\n        username: username\n      },\n      updateQuery: (prev, {\n        subscriptionData\n      }) => {\n        const newData = subscriptionData.data.subscribeMarker;\n\n        switch (newData.mutation) {\n          case \"NEW\":\n            const linLat = newData.data.geometry.coordinates;\n            var popup = new mapboxgl.Popup().setHTML(`<h3>${newData.data.properties.title}<h3><p>${newData.data.properties.description}</p>`);\n            var marker = new mapboxgl.Marker().setLngLat(linLat).setPopup(popup).addTo(map);\n            marker._id = newData.data._id;\n            marker.getElement().addEventListener('click', () => {\n              setCurrentMarker(marker);\n              setTitle(newData.data.properties.title);\n              setDescription(newData.data.properties.description);\n            });\n            return {\n              Marker: [...prev.Marker, newData.data]\n            };\n            break;\n\n          case \"DELETE\":\n            return {\n              Marker: prev.Marker.filter(e => e._id !== newData.data._id)\n            };\n\n          case \"UPDATE\":\n            return {\n              Marker: prev.Marker.map(e => {\n                if (e._id !== newData.data._id) return e;\n                return newData.data;\n              })\n            };\n            break;\n\n          default:\n            console.log(`Warning: unknown mutation ${newData.mutation}`);\n            break;\n        }\n      }\n    });\n  }, [map]);\n\n  const buttonOnclick = () => {\n    if (currentMarker && (insertionMode || currentMarker.geocoderResult)) {\n      currentMarker.remove();\n    }\n\n    setCurrentMarker(null);\n    setInsertionMode(!insertionMode);\n  };\n\n  const color = insertionMode ? \"green\" : \"white\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarStyle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Longitude: \", View.lng, \" | Latitude: \", View.lat, \" | Zoom: \", View.zoom, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        position: \"relative\",\n        right: \"0px\",\n        \"background-color\": color\n      },\n      onClick: buttonOnclick,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => mapContainer.current = el,\n      className: \"mapContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapBox, \"xFpOe8E4os/LHAZsggUwMOMZJus=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = MapBox;\nexport default MapBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapBox\");","map":{"version":3,"sources":["C:/Users/HO_CHUN_WEI/Desktop/web/Jose-Antonio_LoverBus/src/components/Mapbox_TW.js"],"names":["React","useEffect","useRef","useState","useQuery","useMutation","mapboxgl","MapboxGeocoder","Button","env","MARKER_QUERY","MARKERS_SUBSCRIPTION","accessToken","process","REACT_APP_ACCESS_TOKEM","console","log","MapBox","username","markerCallback","insertionMode","setInsertionMode","title","setTitle","description","setDescription","View","setView","lng","lat","zoom","subscribeMarker","markers","variables","map","setMap","mapContainer","data","subscribeToMore","currentMarker","_setCurrentMarker","setCurrentMarker","e","test","setTest","markerLoaded","setMarkerLoaded","initializeMap","Map","container","current","style","center","on","getCenter","toFixed","getZoom","resize","geocoder","addControl","geocoderResult","remove","JSON","parse","lastSelected","place_name","linLat","mapMarker","_lngLat","marker","Marker","setLngLat","addTo","clickPoint","lngLat","once","off","geometry","coordinates","popup","Popup","setHTML","properties","setPopup","_id","getElement","addEventListener","document","updateQuery","prev","subscriptionData","newData","mutation","filter","buttonOnclick","color","position","right","el"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport * as MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\r\nimport { Button } from 'antd';\r\nimport \"./site.css\"\r\nimport env from \"react-dotenv\";\r\n\r\nimport {\r\n// for query\r\nMARKER_QUERY,\r\n// for mutation\r\n// ADD_MARKER_MUTATION,\r\n// DELETE_MARKER_MUTATION,\r\n// UPDATE_MARKER_MUTATION,\r\n// for subscription\r\nMARKERS_SUBSCRIPTION\r\n} from '../graphql'\r\n\r\nmapboxgl.accessToken = process.env.REACT_APP_ACCESS_TOKEM\r\nconsole.log(mapboxgl.accessToken)\r\nconst MapBox = ({username, markerCallback, insertionMode, setInsertionMode, title, setTitle, description, setDescription}) => {\r\n    \r\n    const [View, setView] = useState({\r\n        lng: 121.55,\r\n        lat: 25.05,\r\n        zoom: 12\r\n    })\r\n    const { subscribeMarker, ...markers } = useQuery(\r\n        MARKER_QUERY,\r\n        { variables: { username: username } }\r\n        )\r\n    // const [insertionMode, setInsertionMode] = useState(false)\r\n\r\n\r\n    const [map, setMap] = useState(null);\r\n    const mapContainer = useRef(null);\r\n    const {data, subscribeToMore} = useQuery(MARKER_QUERY, {variables:{username: username}})\r\n\r\n    const [currentMarker, _setCurrentMarker] = useState(null);\r\n    const setCurrentMarker = e => {_setCurrentMarker(e); markerCallback(e);} \r\n    const [test, setTest] = useState(0);\r\n    const [markerLoaded, setMarkerLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const initializeMap = ({ setMap, mapContainer}) => {\r\n            const map = new mapboxgl.Map({\r\n                container: mapContainer.current,\r\n                style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\r\n                center: [View.lng, View.lat],\r\n                zoom: View.zoom\r\n                });\r\n\r\n            map.on(\"move\", () => {\r\n                setView({lng: map.getCenter().lng.toFixed(4), lat: map.getCenter().lat.toFixed(4), zoom:map.getZoom().toFixed(2)})\r\n                setTest(4)\r\n            });\r\n\r\n            map.on(\"load\", () => {\r\n                setMap(map);\r\n                map.resize();\r\n            });\r\n\r\n            var geocoder = new MapboxGeocoder({\r\n                accessToken: mapboxgl.accessToken,\r\n                mapboxgl: mapboxgl\r\n            })\r\n            map.geocoder = geocoder\r\n            map.addControl(geocoder)\r\n            // map.addControl(\r\n            //     new MapboxGeocoder({\r\n            //     accessToken: mapboxgl.accessToken,\r\n            //     mapboxgl: mapboxgl\r\n            //     })\r\n            // );  \r\n\r\n        }\r\n        if (!map) initializeMap({ setMap, mapContainer});\r\n    }, [map]);\r\n\r\n    useEffect(()=>{\r\n        if(!map) return\r\n        map.geocoder.on(\"result\", ()=>{\r\n            if(currentMarker){\r\n                if(currentMarker.geocoderResult || insertionMode){\r\n                    currentMarker.remove()\r\n                }\r\n            }\r\n            setInsertionMode(false)\r\n            setTitle(JSON.parse(map.geocoder.lastSelected).place_name)\r\n            const linLat = map.geocoder.mapMarker._lngLat\r\n            map.geocoder.mapMarker.remove()\r\n\r\n            var marker = new mapboxgl.Marker()\r\n            .setLngLat(linLat)\r\n            .addTo(map)\r\n\r\n            marker.geocoderResult = true\r\n            setCurrentMarker(marker)\r\n        })\r\n    },[map, currentMarker])\r\n\r\n    useEffect(()=>{\r\n        if(map && insertionMode){\r\n            const clickPoint = (e) => {\r\n                if(currentMarker) currentMarker.remove()\r\n\r\n                var marker = new mapboxgl.Marker()\r\n                .setLngLat([e.lngLat.lng, e.lngLat.lat])\r\n                .addTo(map)\r\n\r\n                setTitle(\"\")\r\n                setDescription(\"\")\r\n                \r\n                setCurrentMarker(marker)\r\n            };\r\n            map.once('click', clickPoint);\r\n            return ()=>{map.off('click', clickPoint);}\r\n        }\r\n        // else if(map && !insertionMode && currentMarker){\r\n        //     currentMarker.remove()\r\n        //     setCurrentMarker(null)\r\n        // }\r\n    }, [map, insertionMode, currentMarker]);\r\n\r\n    if(map && data && !markerLoaded){\r\n        setMarkerLoaded(true)\r\n        data.Marker.map(e=>{\r\n            const linLat = e.geometry.coordinates\r\n            var popup = new mapboxgl.Popup()\r\n            .setHTML(`<h3>${e.properties.title}<h3><p>${e.properties.description}</p>`);\r\n\r\n            var marker = new mapboxgl.Marker()\r\n            .setLngLat(linLat)\r\n            .setPopup(popup)\r\n            .addTo(map)\r\n\r\n            marker._id = e._id\r\n\r\n            marker.getElement().addEventListener('click', () => {\r\n                    setCurrentMarker(marker)\r\n                    setTitle(e.properties.title)\r\n                    setDescription(e.properties.description)\r\n                });\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!subscribeToMore || !map) return;\r\n        subscribeToMore({\r\n            document: MARKERS_SUBSCRIPTION,\r\n            variables: {username: username},\r\n            updateQuery: (prev, { subscriptionData }) => {\r\n                const newData = subscriptionData.data.subscribeMarker\r\n                switch(newData.mutation){\r\n                    case \"NEW\":\r\n                        const linLat = newData.data.geometry.coordinates\r\n                        var popup = new mapboxgl.Popup()\r\n                        .setHTML(`<h3>${newData.data.properties.title}<h3><p>${newData.data.properties.description}</p>`);\r\n\r\n                        var marker = new mapboxgl.Marker()\r\n                        .setLngLat(linLat)\r\n                        .setPopup(popup)\r\n                        .addTo(map)\r\n\r\n                        marker._id = newData.data._id\r\n\r\n                        marker.getElement().addEventListener('click', () => {\r\n                            setCurrentMarker(marker)\r\n                            setTitle(newData.data.properties.title)\r\n                            setDescription(newData.data.properties.description)\r\n                        });\r\n                        return {Marker:[...prev.Marker, newData.data]}\r\n                    break\r\n                    case \"DELETE\":\r\n                        return {Marker: prev.Marker.filter(e=>e._id !== newData.data._id)}\r\n                    case \"UPDATE\":\r\n                        return {Marker: prev.Marker.map(e=>{\r\n                            if(e._id !== newData.data._id)\r\n                                return e\r\n                            return newData.data\r\n                        })}\r\n                    break\r\n                    default:\r\n                        console.log(`Warning: unknown mutation ${newData.mutation}`)\r\n                    break\r\n                }\r\n            }\r\n        })\r\n    }, [map])\r\n\r\n    const buttonOnclick = () => {\r\n        if (currentMarker && (insertionMode || currentMarker.geocoderResult)){\r\n            currentMarker.remove()\r\n        }\r\n        setCurrentMarker(null)\r\n        setInsertionMode(!insertionMode)\r\n    }\r\n    const color = insertionMode? \"green\" : \"white\"\r\n    return (\r\n        <div>\r\n            <div className='sidebarStyle'>\r\n                <div>Longitude: {View.lng} | Latitude: {View.lat} | Zoom: {View.zoom} </div>\r\n            </div>\r\n            <Button style={{position: \"relative\", right: \"0px\",\"background-color\":color}}\r\n             onClick={buttonOnclick}>+</Button>\r\n            <div ref={el => (mapContainer.current = el)} className='mapContainer' />\r\n        </div>)\r\n}\r\n\r\nexport default MapBox"]},"metadata":{},"sourceType":"module"}