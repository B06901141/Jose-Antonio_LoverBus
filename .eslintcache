[{"C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\index.js":"1","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\containers\\TourMap.js":"2","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\containers\\TourPlan.js":"3","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\containers\\Login.js":"4","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\components\\SearchInfo.js":"5","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\components\\usePlan.js":"6","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\components\\Mapbox_TW.js":"7","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\components\\AddPlace.js":"8","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\graphql\\index.js":"9","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\graphql\\queries.js":"10","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\graphql\\mutations.js":"11","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\graphql\\subscriptions.js":"12"},{"size":2132,"mtime":1611253223050,"results":"13","hashOfConfig":"14"},{"size":6317,"mtime":1611236150735,"results":"15","hashOfConfig":"14"},{"size":17650,"mtime":1611239943032,"results":"16","hashOfConfig":"14"},{"size":9474,"mtime":1611239928347,"results":"17","hashOfConfig":"14"},{"size":576,"mtime":1611236150729,"results":"18","hashOfConfig":"14"},{"size":2405,"mtime":1611239919305,"results":"19","hashOfConfig":"14"},{"size":7592,"mtime":1611254910953,"results":"20","hashOfConfig":"14"},{"size":6591,"mtime":1611236150727,"results":"21","hashOfConfig":"14"},{"size":438,"mtime":1611236150738,"results":"22","hashOfConfig":"14"},{"size":1299,"mtime":1611236150740,"results":"23","hashOfConfig":"14"},{"size":2258,"mtime":1611236150739,"results":"24","hashOfConfig":"14"},{"size":923,"mtime":1611236150741,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"soldhl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\index.js",[],["58","59"],"C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\containers\\TourMap.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82"],"import React, { useState, useEffect } from \"react\"\r\nimport {useHistory} from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport MapBox from \"../components/Mapbox_TW\"\r\nimport AddPlace from \"../components/AddPlace\"\r\nimport SearchInfo from \"../components/SearchInfo\"\r\nimport { Form, Checkbox, Input, Layout, Menu, Breadcrumb, Button, \r\n    Drawer, Col, Row, Select, DatePicker } from 'antd';\r\nimport { ExportOutlined, HeartOutlined, LockOutlined, UserOutlined, PictureOutlined, EnvironmentOutlined, PlusOutlined} from '@ant-design/icons';\r\nimport usePlan from '../components/usePlan'\r\n\r\nimport {\r\n//     // for query\r\n//     MARKER_QUERY,\r\n//     PLAN_QUERY,\r\n    USERPLAN_QUERY,\r\n    // SIGNIN_QUERY,\r\n//     // for mutation\r\n//     ADD_MARKER_MUTATION,\r\n//     DELETE_MARKER_MUTATION,\r\n//     UPDATE_MARKER_MUTATION,\r\n//     NEW_PLAN_MUTATION,\r\n//     RENAME_PLAN_MUTATION,\r\n//     DELETE_PLAN_MUTATION,\r\n//     NEW_SPOT_MUTATION,\r\n//     delete_Spot_MUTATION,\r\n//     UPDATE_SPOTSTARTTIME_MUTATION,\r\n//     UPDATE_SPOTENDTIME_MUTATION,\r\n    // SIGNUP_MUTATION\r\n//     // for subscription\r\nUSERNAME_QUERY,\r\n  } from '../graphql' \r\n\r\nimport \"./TourMap.css\"\r\nimport 'antd/dist/antd.css'\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { Option } = Select;\r\n\r\nconst TourMap = (props) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    // const {data:usernameData} = useQuery(USERNAME_QUERY, {variables:{_id:props.match.params.userId}})\r\n\r\n    const {plan, error, username} = usePlan(props.match.params.userId)\r\n\r\n    // const username = usernameData? usernameData.Username : \"\"\r\n    const [currentMarker, setCurrentMarker] = useState(null)\r\n    const [insertionMode, _setInsertionMode] = useState(false)\r\n    const setInsertionMode = (mode) => {_setInsertionMode(mode)}\r\n    const [showUsermMenu, setShowUsermMenu] = useState(false)\r\n    const history = useHistory();\r\n\r\n    const markerCallback = (marker) => { setCurrentMarker(marker) }\r\n    const toTourPlan = () => {\r\n        history.push(`${history.location.pathname}/TourPlan`)\r\n    }\r\n    const Logout = () => {\r\n        history.push(\"/\")\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Layout style={{minWidth: \"1000px\"}}>\r\n            <Header className=\"header\" style={{color: \"white\", fontSize: \"20px\"}}>Tour Map\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item \r\n                        // className=\"mh7\"\r\n                        icon={<UserOutlined />} key=\"4\" style={{position:'absolute', width: '150px',textAlign: 'center', right: '0%'}} onClick={() => {setShowUsermMenu(!showUsermMenu)}}>\r\n                        {username}\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n            <Layout>\r\n            <Sider height={500} width={200} className=\"site-layout-background\">\r\n                <AddPlace username={username} currentMarker={currentMarker} plan={plan} insertionMode={insertionMode}\r\n                        title={title} setTitle={setTitle} description={description}\r\n                        setDescription={setDescription} setCurrentMarker={setCurrentMarker}></AddPlace>\r\n            </Sider>\r\n            <Layout style={{ padding: '0 24px 24px' }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <Content\r\n                className=\"site-layout-background\"\r\n                style={{\r\n                    padding: 24,\r\n                    margin: 0,\r\n                    minHeight: 280,\r\n                }}\r\n                >\r\n                <MapBox username={username} markerCallback={markerCallback} insertionMode={insertionMode}\r\n                    title={title} setTitle={setTitle} description={description} setInsertionMode={setInsertionMode}\r\n                        setDescription={setDescription}></MapBox>\r\n                {showUsermMenu?( //show menu if click account button\r\n                <div style={{position: \"absolute\", width: '150px', textAlign: 'center',top: \"65px\", right: '0%', hidden: 'true'}} zindex={-1}>\r\n                    <Menu theme=\"blue\" mode=\"vertical\">\r\n                    <Menu.Item \r\n                        icon ={<EnvironmentOutlined/>}\r\n                        key=\"1\" style={{margin: '0px', textAlign: 'left', position: \"relative\", left: \"23px\"}} onClick={toTourPlan}>\r\n                        {/* <Link to=\"/\">Tour Map</Link> */}\r\n                        Tour Plan\r\n                    </Menu.Item>\r\n                    <Menu.Item \r\n                        icon ={<ExportOutlined/>}\r\n                        key=\"2\" style={{left: '0px', textAlign: 'left', position: \"relative\", left: \"23px\"}} onClick={\r\n                        Logout\r\n                        }>\r\n                        Logout\r\n                    </Menu.Item>\r\n                    </Menu>\r\n                </div>):null\r\n                }\r\n                </Content>\r\n            </Layout>\r\n            </Layout>\r\n            </Layout>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TourMap;\r\n\r\n\r\n\r\n\r\n// class App extends React.Component {\r\n//   state = { visible: false };\r\n\r\n//   showDrawer = () => {\r\n//     this.setState({\r\n//       visible: true,\r\n//     });\r\n//   };\r\n\r\n//   onClose = () => {\r\n//     this.setState({\r\n//       visible: false,\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"site-drawer-render-in-current-wrapper\">\r\n//         Render in this\r\n//         <div style={{ marginTop: 16 }}>\r\n//           <Button type=\"primary\" onClick={this.showDrawer}>\r\n//             Open\r\n//           </Button>\r\n//         </div>\r\n//         <Drawer\r\n//           title=\"Basic Drawer\"\r\n//           placement=\"right\"\r\n//           closable={false}\r\n//           onClose={this.onClose}\r\n//           visible={this.state.visible}\r\n//           getContainer={false}\r\n//           style={{ position: 'absolute' }}\r\n//         >\r\n//           <p>Some contents...</p>\r\n//         </Drawer>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// ReactDOM.render(<App />, mountNode);","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\containers\\TourPlan.js",["83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Tooltip, Form, Checkbox, Input, Layout, Menu, Breadcrumb, Button, Table, Popconfirm,\r\n    Drawer, Col, Row, Select, Space} from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\n// import { SearchOutlined } from '@ant-design/icons';    \r\nimport { ExportOutlined, LockOutlined, UserOutlined, PictureOutlined, EnvironmentOutlined, PlusOutlined} from '@ant-design/icons';\r\nimport 'antd/dist/antd.css'\r\nimport './TourPlan.css'\r\nimport usePlan from '../components/usePlan'\r\nimport {\r\n//     // for query\r\n//     PLAN_QUERY,\r\n    USERNAME_QUERY,\r\n    USERPLAN_QUERY,\r\n//     // for mutation\r\n//     NEW_PLAN_MUTATION,\r\n//     RENAME_PLAN_MUTATION,\r\n    DELETE_PLAN_MUTATION,\r\n//     NEW_SPOT_MUTATION,\r\n    DELETE_SPOT_MUTATION,\r\n    UPDATE_SPOT_STARTTIME_MUTATION,\r\n    UPDATE_SPOT_ENDTIME_MUTATION,\r\n//     // for subscription\r\n  } from '../graphql'\r\nimport background from '../img/place-of-destination.png';\r\nimport bucketList from '../img/bucket_list.jpg';\r\nimport pointLeft from '../img/point_left.png';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nexport default function TourPlan(props){\r\n    // const [username, setUsername] = useState(\"\")\r\n    // const {data:usernameData} = useQuery(USERNAME_QUERY, {variables:{_id:props.match.params.userId}})\r\n    // const {data:usernameData} = useQuery(USERNAME_QUERY, {variables:{_id:props.match.params.userId}})\r\n    const {plan:planState, error, username} = usePlan(props.match.params.userId)\r\n\r\n    const [deletePlan] = useMutation(DELETE_PLAN_MUTATION)\r\n    const [deleteSpot] = useMutation(DELETE_SPOT_MUTATION)\r\n    const [updateSpotStartTime] = useMutation(UPDATE_SPOT_STARTTIME_MUTATION)\r\n    const [updateSpotEndTime] = useMutation(UPDATE_SPOT_ENDTIME_MUTATION)\r\n\r\n    // const username = usernameData? usernameData.Username : null\r\n    // console.log(planState)\r\n    // console.log(usrename)\r\n    const [showUsermMenu, setShowUsermMenu] = useState(false)\r\n    const [re, setre] = useState(true)\r\n    const [currentPlan, setCurrentPlan] = useState(0)\r\n    const [currentSpot, setCurrentSpot] = useState(0)\r\n    const [initialPlan, setInitialPlan] = useState(true)\r\n    const [newTime, setTime] = useState(false)\r\n    const [newStartTime, setnewStartTime] = useState(\"\")\r\n    const [newEndTime, setnewEndTime] = useState(\"\")\r\n\r\n    const history = useHistory();\r\n    const backToMap = () => {\r\n         history.push(`/${props.match.params.userId}`)\r\n    }\r\n    const logout = () => {\r\n         history.push(\"/\")\r\n    }\r\n    \r\n    const handleStartChange = (ev) => {\r\n        if (!ev.target['validity'].valid) return;\r\n        const dt = ev.target['value'] + ':00Z';\r\n        setnewStartTime(dt);\r\n        // console.log(dt)\r\n    }\r\n    const handleEndChange = (ev) => {\r\n        if (!ev.target['validity'].valid) return;\r\n        const dt = ev.target['value'] + ':00Z';\r\n        setnewEndTime(dt);\r\n        // console.log(dt)\r\n      }\r\n    return (\r\n        <React.Fragment>\r\n            <Layout>\r\n            <Header className=\"header\" style={{color: \"white\", fontSize: \"20px\", margin: \"0px\"}}>Tour Plan\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item icon={<UserOutlined />} key=\"4\" style={{position:'absolute', width: '150px',textAlign: 'center', right: '0%'}} onClick={() => {setShowUsermMenu(!showUsermMenu)}}>\r\n                        {username}\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n            <Layout className='middle'>\r\n            <Sider height={500} width={200} className=\"site-layout-background\">\r\n                <Menu\r\n                mode=\"inline\"\r\n                defaultSelectedKeys={['1']}\r\n                defaultOpenKeys={['sub1']}\r\n                style={{ height: '100%', borderRight: 0}}\r\n                >\r\n                <SubMenu key=\"sub1\" icon={<EnvironmentOutlined />} title=\"My Plans\">\r\n                    {\r\n                      planState.map(({ title }, i) => (\r\n                        <Menu.Item onClick={() => {\r\n                            setCurrentPlan(i)\r\n                            setInitialPlan(false)\r\n                        }} style={{display: \"flex\", alignItems: \"center\"}}>\r\n                            {title}\r\n                            <Button \r\n                            className=\"deletePlan\"\r\n                            type=\"dashed\"\r\n                            size=\"small\"\r\n                            style={{position: \"absolute\", right: \"10px\", fontSize: \"5px\"}}\r\n                            onClick={() => {\r\n                                deletePlan({variables:{\r\n                                    _id: planState[i]._id\r\n                                  }})\r\n                                setre(!re)\r\n                                // console.log(planState)\r\n                            }}\r\n                            >x</Button>\r\n                        </Menu.Item>\r\n                      ))\r\n                    }\r\n                </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout style={{ padding: '0 24px 24px' }}>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item>Plan List</Breadcrumb.Item>\r\n                {(!planState || planState.length === 0)?(<Breadcrumb.Item></Breadcrumb.Item>)\r\n                :(<Breadcrumb.Item>{planState[currentPlan].title}</Breadcrumb.Item>)}   \r\n                </Breadcrumb>\r\n                <Content\r\n                className=\"site-layout-background\"\r\n                style={{\r\n                    padding: 24,\r\n                    margin: 0,\r\n                    minHeight: 280,\r\n                }}\r\n                >\r\n                    {(initialPlan && !(!planState || planState.length === 0))?(\r\n                        <React.Fragment>\r\n                            <h3 style={{margin: \"0px\", position: \"relative\", left: \"0px\"}}>Choose a Plan in the Left</h3> \r\n                            <br></br>\r\n                            <br></br>\r\n                            <img style={{width: \"100px\"}} src={pointLeft} alt=\"pointLeft\"/>\r\n                        </React.Fragment>\r\n                        ):\r\n                        (\r\n                    <React.Fragment>\r\n                    <div className=\"table-title\">\r\n                        {(!planState || planState.length === 0)?(<h3></h3>):(<h3 style={{margin: \"0px\", position: \"relative\", left: \"0px\"}}> {planState[currentPlan].title} </h3>)}\r\n                    </div>\r\n                    {((!planState || planState.length === 0)?(\r\n                        <div className=\"table-title\" style={{textAlign: \"center\"}}> \r\n                            <h2 style={{fontFamily: \"fantasy\"}}> No Plan Right Now </h2> \r\n                            <br></br>\r\n                            <img src={bucketList} alt=\"Bucket List\" style={{width: \"500px\"}}/>\r\n                        </div>):\r\n                        (<React.Fragment>\r\n                            {(planState[currentPlan].spots.length !== 0)?(\r\n                                <table className=\"table-fill\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className='spot-title' >Title</th>\r\n                                        <th className='spot-description' >Description</th>\r\n                                        <th >Time</th>\r\n                                        <th className='spot-button'></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {planState[currentPlan].spots.map((e, i) => (\r\n                                        <tr key={i}>\r\n                                            <td className='spot-title' > {e.location.properties.title} </td>\r\n                                            <td className='spot-description' > {e.location.properties.description} </td>\r\n                                            <td className='spot-time' >\r\n                                            <p>{new Date(e.startTime).toLocaleString()}</p>\r\n                                            <p className=\"timeto\">to</p>\r\n                                            <p>{new Date(e.endTime).toLocaleString()}</p> \r\n                                            </td>\r\n                                            <td className='spot-button'>\r\n                                                <Button onClick={() => {setTime(true)\r\n                                                setCurrentSpot(i)}} \r\n                                                style={{width:\"100px\", textAlign: \"center\", fontSize: \"10px\"}}> Edit Time</Button>\r\n                                                <React.Fragment>\r\n                                                    <Drawer\r\n                                                        title={planState[currentPlan].spots[currentSpot].location.properties.title}\r\n                                                        width={360}\r\n                                                        onClose={() => {setTime(false)}}\r\n                                                        visible={newTime}\r\n                                                        bodyStyle={{ paddingBottom: 80 }}\r\n                                                        footer={\r\n                                                            <div\r\n                                                                style={{\r\n                                                                    textAlign: 'right',\r\n                                                            }}\r\n                                                        >\r\n                                                            <Button onClick={() => {setTime(false)}} style={{ marginRight: 8 }}>\r\n                                                                Cancel\r\n                                                            </Button>\r\n                                                            {/* <Button onClick={registerAccount} */}\r\n                                                            <Button onClick={() => {\r\n                                                                updateSpotStartTime({variables:{\r\n                                                                    _id: planState[currentPlan].spots[currentSpot]._id,\r\n                                                                    time: new Date(newStartTime).toString()\r\n                                                                }})\r\n                                                                updateSpotEndTime({variables:{\r\n                                                                    _id: planState[currentPlan].spots[currentSpot]._id,\r\n                                                                    time: new Date(newEndTime).toString()\r\n                                                                }})\r\n                                                                setTime(false)\r\n                                                                // setre(!re)\r\n                                                                console.log(new Date(newStartTime).toString(), new Date(newEndTime).toString())\r\n                                                            }}\r\n                                                                type=\"primary\">\r\n                                                                Change Time\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    }\r\n                                                    >\r\n                                                        <Form layout=\"vertical\" hideRequiredMark>\r\n                                                            <Row gutter={16}>\r\n                                                                <Col>\r\n                                                                    <Form.Item\r\n                                                                        name=\"Start time\"\r\n                                                                        label=\"Start time\"\r\n                                                                        rules={[{ required: true, message: 'Please enter new start time' }]}\r\n                                                                        >\r\n                                                                        <input \r\n                                                                            type=\"datetime-local\"\r\n                                                                            name=\"start time\"\r\n                                                                            value={(newStartTime || '').toString().substring(0, 16)}\r\n                                                                            onChange={handleStartChange} />\r\n                                                                    </Form.Item>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                            <Row gutter={16}>\r\n                                                                <Col>\r\n                                                                    <Form.Item\r\n                                                                        name=\"End time\"\r\n                                                                        label=\"End time\"\r\n                                                                        rules={[{ required: true, message: 'Please enter new end time' }]}\r\n                                                                        >\r\n                                                                        <input \r\n                                                                            type=\"datetime-local\"\r\n                                                                            name=\"end time\"\r\n                                                                            value={(newEndTime || '').toString().substring(0, 16)}\r\n                                                                            onChange={handleEndChange} />\r\n                                                                    </Form.Item>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Form>\r\n                                                    </Drawer>\r\n                                                </React.Fragment>\r\n                                                <Button onClick={()=>{\r\n                                                    // var temp = planState\r\n                                                    // temp[currentPlan].spots.splice(i, 1)\r\n                                                    // setPlan(temp)\r\n                                                    setre(!re)\r\n                                                    deleteSpot({variables:{\r\n                                                        _id: planState[currentPlan].spots[currentSpot]._id\r\n                                                    }})                \r\n                                                }} style={{width:\"100px\", textAlign: \"center\", fontSize: \"10px\"}}> Delete Spot</Button> \r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>):(\r\n                                <div className=\"table-title\" style={{textAlign: \"center\"}}> \r\n                                    <h2 style={{fontFamily: \"fantasy\"}}> No Spot Right Now </h2> \r\n                                    <img src={background} alt=\"Background\"/>\r\n                                </div>\r\n                                )}\r\n                        </React.Fragment>))} \r\n                        </React.Fragment>              \r\n                    )\r\n                    }\r\n                \r\n                {showUsermMenu?( //show menu if click account button\r\n                <div style={{position: \"absolute\", width: '150px', textAlign: 'center',top: \"65px\", right: '0%', hidden: 'true'}} zindex={-1}>\r\n                    <Menu theme=\"blue\" mode=\"vertical\">\r\n                    <Menu.Item \r\n                        icon ={<EnvironmentOutlined/>}\r\n                        key=\"1\" style={{margin: '0px', textAlign: 'left', position: \"relative\", left: \"23px\"}} onClick={backToMap}>\r\n                        Tour Map\r\n                    </Menu.Item>\r\n                    <Menu.Item \r\n                        icon ={<ExportOutlined/>}\r\n                        key=\"2\" style={{margin: '0px', textAlign: 'left', position: \"relative\", left: \"23px\"}} onClick={logout}>\r\n                        logout\r\n                    </Menu.Item>\r\n                    </Menu>\r\n                </div>):null\r\n                }\r\n                </Content>\r\n            </Layout>\r\n            </Layout>\r\n            </Layout>\r\n        </React.Fragment>\r\n    )\r\n}","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\containers\\Login.js",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"import React, { useState, useEffect, useCallback } from \"react\"\r\nimport {useHistory} from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport MapBox from \"../components/Mapbox_TW\"\r\nimport AddPlace from \"../components/AddPlace\"\r\nimport SearchInfo from \"../components/SearchInfo\"\r\nimport { Form, Checkbox, Input, Layout, Menu, Breadcrumb, Button, \r\n    Drawer, Col, Row, Select, DatePicker } from 'antd';\r\nimport { LockOutlined, UserOutlined, PictureOutlined, EnvironmentOutlined, PlusOutlined} from '@ant-design/icons';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n} from \"react-router-dom\"; \r\nimport TourPlan from \"./TourPlan\"\r\n\r\nimport \"./TourMap.css\"\r\nimport 'antd/dist/antd.css'\r\nimport './Login.css'\r\n\r\nimport {\r\n//     // for query\r\n//     MARKER_QUERY,\r\n//     PLAN_QUERY,\r\n    SIGNIN_QUERY,\r\n//     // for mutation\r\n//     ADD_MARKER_MUTATION,\r\n//     DELETE_MARKER_MUTATION,\r\n//     UPDATE_MARKER_MUTATION,\r\n//     NEW_PLAN_MUTATION,\r\n//     RENAME_PLAN_MUTATION,\r\n//     DELETE_PLAN_MUTATION,\r\n//     NEW_SPOT_MUTATION,\r\n//     delete_Spot_MUTATION,\r\n//     UPDATE_SPOTSTARTTIME_MUTATION,\r\n//     UPDATE_SPOTENDTIME_MUTATION,\r\n    SIGNUP_MUTATION\r\n//     // for subscription\r\n  } from '../graphql'\r\n// import { Switch } from \"@material-ui/core\"\r\n\r\n\r\nexport default function Login(){\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [register, setRegister] = useState(false)\r\n    const {data:signIndata, error:signInError} = useQuery(SIGNIN_QUERY, {variables: {username, password}})\r\n    const [signUp]= useMutation(SIGNUP_MUTATION)\r\n    const[regisUsername, setRegisUsername] = useState(\"\")\r\n    const[regisPassword, setRegisPassword] = useState(\"\")\r\n    const[regisRetype, setRegisRetype] = useState(\"\")\r\n    const [showUsermMenu, setShowUsermMenu] = useState(false)\r\n\r\n    const history = useHistory();\r\n    // const handleRout = useCallback(() => history.push(`/${signIndata}`), [history]);\r\n\r\n    const onFinish = (values) => {\r\n        setUsername(values.username)\r\n        setPassword(values.password)\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(signIndata) history.push(`/${signIndata.signIn}`)\r\n    }, [signIndata])\r\n\r\n    useEffect(() =>{\r\n        if(!signInError || !username) return\r\n        alert(signInError.message)\r\n    }, [signInError])\r\n    const enter_registerAccount = (event)=>{\r\n        if(event.keyCode===13){\r\n            registerAccount()\r\n        }\r\n    }\r\n    const registerAccount = async () => {\r\n        if(regisUsername === \"\"){\r\n            alert(\"Please enter username\")\r\n            return\r\n        }\r\n        if(regisPassword === \"\"){\r\n            alert(\"Please enter password\")\r\n            return\r\n        }\r\n        if(regisRetype === \"\"){\r\n            alert(\"Please retype password\")\r\n            return\r\n        }\r\n        if(regisPassword !== regisRetype){\r\n            alert(\"Password mismatch\")\r\n            return\r\n        }\r\n        try{\r\n            await signUp({variables: {username: regisUsername, password: regisPassword}})\r\n            alert(`Welcome to join us, ${regisUsername}!`)\r\n            setRegister(false)\r\n        }\r\n        catch(err){\r\n            alert(err)\r\n            return\r\n        }\r\n    }\r\n    return (\r\n    <React.Fragment>\r\n        <div className='login-background'>\r\n        <div className='login-root'>\r\n            <div className='login-section'>\r\n                <h5 className='login-title'>Welcome to Jose Antonio LoverBus !</h5>\r\n                <Form \r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={onFinish} // summit user info\r\n                >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Username!',\r\n                    },\r\n                    ]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Password!',\r\n                    },\r\n                    ]}\r\n                >\r\n                    <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                    <Checkbox>Remember me</Checkbox>\r\n                    </Form.Item>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    Log in\r\n                    </Button>\r\n                    Or  \r\n                    <React.Fragment>\r\n                        <a className='register-link' onClick={() => setRegister(true)}>\r\n                            Register Now\r\n                        </a>\r\n                        <Drawer\r\n                            title=\"Create a new account\"\r\n                            width={360}\r\n                            onClose={() => setRegister(false)}\r\n                            visible={register}\r\n                            bodyStyle={{ paddingBottom: 80 }}\r\n                            footer={\r\n                                <div\r\n                                    style={{\r\n                                        textAlign: 'right',\r\n                                }}\r\n                            >\r\n                                <Button onClick={() => setRegister(false)} style={{ marginRight: 8 }}>\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={registerAccount} type=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </div>\r\n                        }\r\n                        >\r\n                            <Form layout=\"vertical\" hideRequiredMark>\r\n                                <Row gutter={16}>\r\n                                    <Col>\r\n                                        <Form.Item\r\n                                            name=\"username\"\r\n                                            label=\"Username\"\r\n                                            rules={[{ required: true, message: 'Please enter username' }]}\r\n                                            >\r\n                                            <Input placeholder=\"Please enter username\"\r\n                                                onChange={e=>setRegisUsername(e.target.value)}\r\n                                                onKeyUp={enter_registerAccount}\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row gutter={16}>\r\n                                    <Col>\r\n                                        <Form.Item\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            rules={[{ required: true, message: 'Please enter password' }]}\r\n                                            >\r\n                                            <Input placeholder=\"Please enter password\" type=\"password\"\r\n                                                onChange={e=>setRegisPassword(e.target.value)}\r\n                                                onKeyUp={enter_registerAccount}\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row gutter={16}>\r\n                                    <Col>\r\n                                        <Form.Item\r\n                                            name=\"Retype password\"\r\n                                            label=\"Retype Password\"\r\n                                            rules={[{ required: true, message: 'Please retype password' }]}\r\n                                            >\r\n                                            <Input placeholder=\"Please retype your password\" type=\"password\"\r\n                                                onChange={e=>setRegisRetype(e.target.value)}\r\n                                                onKeyUp={enter_registerAccount}\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Drawer>\r\n                    </React.Fragment>\r\n                </Form.Item>\r\n                </Form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n    </React.Fragment>\r\n    )\r\n\r\n}","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\components\\SearchInfo.js",["126","127","128","129","130","131","132","133","134","135","136","137","138"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport 'antd/dist/antd.css'\r\nimport { Input, Layout, Menu, Breadcrumb, Button, Card} from 'antd';\r\nimport { TagOutlined, CheckOutlined} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { Search } = Input\r\n\r\nconst SearchInfo = () => {\r\n  const onSearch = value => console.log(value);\r\n  return (\r\n    <Search placeholder=\"input search text\" onSearch={onSearch} enterButton size=\"default\"\r\n      style={{position: \"relative\", bottom: \"0%\"}}/>\r\n  )\r\n}\r\n\r\nexport default SearchInfo","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\components\\usePlan.js",["139","140","141","142","143","144","145"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\n\r\nimport {\r\n//     // for query\r\n//     MARKER_QUERY,\r\n//     PLAN_QUERY,\r\n    USERNAME_QUERY,\r\n    USERPLAN_QUERY,\r\n    PLAN_SUBSCRIPTION\r\n    // SIGNIN_QUERY,\r\n//     // for mutation\r\n//     ADD_MARKER_MUTATION,\r\n//     DELETE_MARKER_MUTATION,\r\n//     UPDATE_MARKER_MUTATION,\r\n//     NEW_PLAN_MUTATION,\r\n//     RENAME_PLAN_MUTATION,\r\n//     DELETE_PLAN_MUTATION,\r\n//     NEW_SPOT_MUTATION,\r\n//     delete_Spot_MUTATION,\r\n//     UPDATE_SPOTSTARTTIME_MUTATION,\r\n//     UPDATE_SPOTENDTIME_MUTATION,\r\n    // SIGNUP_MUTATION\r\n//     // for subscription\r\n  } from '../graphql'\r\n\r\nexport default function usePlan(_userId){\r\n    const {data:planList, error, subscribeToMore} = useQuery(USERPLAN_QUERY, {variables:{_userId:_userId}})\r\n    const {data:usernameData} = useQuery(USERNAME_QUERY, {variables:{_id:_userId}})\r\n    const username = usernameData? usernameData.Username : \"\"\r\n    const plan = planList? planList.UserPlan : []\r\n    useEffect(()=>{\r\n        subscribeToMore({\r\n            document: PLAN_SUBSCRIPTION,\r\n            variables: {username: username},\r\n            updateQuery: (prev, { subscriptionData }) => {\r\n                const newData = subscriptionData.data.subscribePlan\r\n                var newArray\r\n                const prev_item = prev ? prev.UserPlan : []\r\n                switch(newData.mutation){\r\n                    case \"NEW\":\r\n                        return {UserPlan:[...prev_item, newData.data]}\r\n                    break\r\n                    case \"DELETE\":\r\n                        newArray = prev.UserPlan.filter(e=>e._id !== newData.data._id)\r\n                        return {UserPlan:newArray}\r\n                    break\r\n                    case \"UPDATE\":\r\n                        newArray = prev.UserPlan.map(e=>{\r\n                            if(e.title !== newData.data.title)\r\n                                return e\r\n                            return newData.data\r\n                        })\r\n                        return {\"UserPlan\":newArray}\r\n                    break\r\n                    default:\r\n                        console.log(`Warning: unknown mutation ${newData.mutation}`)\r\n                    break\r\n                }\r\n            }\r\n        })\r\n    }, [username, subscribeToMore])\r\n    return {plan, error, username}\r\n}","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\components\\Mapbox_TW.js",["146","147","148","149","150","151","152","153","154","155","156"],"C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\components\\AddPlace.js",["157","158","159","160","161","162","163","164","165","166","167","168","169"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport 'antd/dist/antd.css'\r\nimport { Input, Layout, Menu, Breadcrumb, Button, Card, Select } from 'antd';\r\nimport { TagOutlined, CheckOutlined} from '@ant-design/icons';\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport usePlan from '../components/usePlan'\r\nimport mapboxgl from \"mapbox-gl\";\r\n\r\nimport {\r\n// for query\r\n// MARKER_QUERY,\r\n// for mutation\r\nADD_MARKER_MUTATION,\r\nDELETE_MARKER_MUTATION,\r\nUPDATE_MARKER_MUTATION,\r\nNEWSPOT_MUTATION,\r\nNEWPLAN_MUTATION,\r\n// for subscription\r\n} from '../graphql'\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst AddPlace = ({username, currentMarker, setCurrentMarker, markerContentCallback, insertionMode, plan, title, setTitle, description, setDescription}) => {\r\n  const setCurrentMarkerContent = e => { markerContentCallback(e);} \r\n  const [planId, setPlanId] = useState(\"\")\r\n  const [list1Value, setList1Value] = useState(\"\")\r\n  const [showList1, setshowList1] = useState(false)\r\n  const [addSpot] = useMutation(NEWSPOT_MUTATION)\r\n  const [deleteMarker] = useMutation(DELETE_MARKER_MUTATION)\r\n  const [updateMarker] = useMutation(UPDATE_MARKER_MUTATION)\r\n  const [addMarker] = useMutation(ADD_MARKER_MUTATION)\r\n  const deleteOnclick = () => {\r\n    const marker_id = currentMarker._id\r\n    deleteMarker({variables:{_id:marker_id}})\r\n    currentMarker.remove()\r\n    setCurrentMarker(null)\r\n  }\r\n  const onclick = async () => {\r\n    if(!currentMarker) {\r\n      alert(\"select a marker to add\")\r\n      return\r\n    }\r\n    if(title === \"\"){\r\n      // alert(\"Please input a title\")\r\n      // return\r\n      setTitle(\"Untitled\")\r\n    }\r\n    if(description === \"\"){\r\n      setDescription(\"No description\")\r\n    }\r\n    const CustomTitle = title === \"\" ? \"Untitled\" : title\r\n    const CustomDescription = description === \"\" ? \"No description\" : description\r\n    const {lng, lat} = currentMarker._lngLat\r\n    var marker_id = currentMarker._id\r\n    if(currentMarker.geocoderResult){\r\n      marker_id = await addMarker({variables:{\r\n        username: username,\r\n        title: CustomTitle,\r\n        coordinates: [currentMarker._lngLat.lng, currentMarker._lngLat.lat],\r\n        description: CustomDescription\r\n      }})\r\n      currentMarker.geocoderResult = null\r\n      marker_id = marker_id.data.addMarker\r\n    }\r\n    else if(insertionMode){\r\n      marker_id = await addMarker({variables:{\r\n        username: username,\r\n        title: CustomTitle,\r\n        coordinates: [lng, lat],\r\n        description: CustomDescription\r\n      }})\r\n      marker_id = marker_id.data.addMarker\r\n    }\r\n    else{\r\n      updateMarker({variables:{\r\n        _id:marker_id,\r\n        newTitle: CustomTitle,\r\n        newDescription: CustomDescription\r\n      }})\r\n      if(currentMarker.getPopup())\r\n        currentMarker.getPopup().setHTML(`<h3>${CustomTitle}<h3><p>${CustomDescription}</p>`);\r\n      else{\r\n        var popup = new mapboxgl.Popup()\r\n            .setHTML(`<h3>${CustomTitle}<h3><p>${CustomDescription}</p>`);\r\n        currentMarker.setPopup(popup)\r\n      }\r\n    }\r\n    if(marker_id !== \"\" && planId !== \"\"){\r\n      addSpot({variables:{\r\n        planID: planId,\r\n        markerID: marker_id\r\n      }})\r\n    }\r\n  }\r\n  const { TextArea } = Input;\r\n  return (\r\n    <Card title=\"Add New Marker\">\r\n      <Card type=\"inner\" title=\"Title\">\r\n        <Input placeholder=\"set your plan title\" allowClear\r\n              onChange={(e) => {setTitle(e.target.value)}}\r\n              value={title} ></Input>\r\n      </Card>\r\n      <Card\r\n        style={{ marginTop: 16 }}\r\n        type=\"inner\"\r\n        title=\"Descriptions\"\r\n      >\r\n        <TextArea TextArea rows={4} placeholder=\"set your plan descriptions\" allowClear\r\n                  value={description}\r\n                  onChange={(e) => {setDescription(e.target.value)}}></TextArea> \r\n      </Card>\r\n      <Card  \r\n        style={{ marginTop: 16 }}\r\n        type=\"inner\"\r\n        title=\"My Plan List\">\r\n        <AddtoPlan plan={plan} list1Value={list1Value} setList1Value={setList1Value}\r\n                showList1={showList1} setshowList1={setshowList1} username={username}\r\n                planId={planId} setPlanId={setPlanId}></AddtoPlan>\r\n      </Card>\r\n      <br></br>\r\n      {insertionMode || !currentMarker ? null : (\r\n      <div>\r\n        <Button size={\"small\"} onClick={deleteOnclick} style={{position: \"absolute\", right: \"90px\", bottom: \"10px\"}}>Delete</Button>\r\n      </div>)}\r\n      <div>\r\n        <Button size={\"small\"} onClick={onclick} style={{position: \"absolute\", right: \"25px\", bottom: \"10px\"}}>Save</Button>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst NEW_ITEM = \"NEW_ITEM\";\r\nconst Option = Select.Option;\r\n\r\nconst AddtoPlan = ({username, plan, list1Value, setList1Value, showList1, setshowList1, planId, setPlanId}) => {\r\n  const list1Options = plan.map(e=>e.title)\r\n  const [newPlan] = useMutation(NEWPLAN_MUTATION)\r\n  const setDisplayValue = (v) => {\r\n    setList1Value(v);\r\n    const _id = plan.filter(e=>e.title === v)[0]._id\r\n    setPlanId(_id)\r\n  }\r\n  const onChangeList1 = (value) => {\r\n    if (value !== NEW_ITEM) {\r\n      setDisplayValue(value)\r\n    } else {\r\n      setshowList1(true)\r\n    }\r\n  };\r\n\r\n  const onConfirm = async (inputValue) => {\r\n    inputValue = inputValue.trim();\r\n    if (list1Options.includes(inputValue)) {\r\n      setshowList1(false)\r\n      setDisplayValue(inputValue)\r\n    } else {\r\n      setshowList1(false)\r\n      const _id = await newPlan({variables:{username:username,title:inputValue}})\r\n      setPlanId(_id.data.newPlan)\r\n      setList1Value(inputValue)\r\n    }\r\n  };\r\n\r\n  const list1SelectOptions = list1Options.map(o => (\r\n    <Option key={o}>{o}</Option>\r\n  ));\r\n\r\n    return (\r\n      <div>\r\n        <Select\r\n          value={list1Value}\r\n          style={{ width: 100 }}\r\n          onChange={onChangeList1}\r\n        >\r\n          {list1SelectOptions}\r\n          <Option value={NEW_ITEM}>+ New Plan</Option>\r\n        </Select>\r\n\r\n        <SweetAlert\r\n          show={showList1}\r\n          title=\"Add New Plan\"\r\n          text=\"Enter new Plan Name\"\r\n          showCancelButton\r\n          type=\"input\"\r\n          inputPlaceholder=\"Enter Plan Name\"\r\n          animation=\"slide-from-top\"\r\n          validationMsg=\"Please enter a name!\"\r\n          onConfirm={onConfirm}\r\n          onCancel={() => {\r\n            setshowList1(false);\r\n          }}\r\n          onEscapeKey={() => {setshowList1(false)}}\r\n          onOutsideClick={() => {setshowList1(false)}}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default AddPlace\r\n","C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\graphql\\index.js",[],"C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\graphql\\queries.js",[],"C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\graphql\\mutations.js",[],["170","171"],"C:\\Users\\HO_CHUN_WEI\\Desktop\\web\\Jose-Antonio_LoverBus\\src\\graphql\\subscriptions.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":1,"column":27,"nodeType":"178","messageId":"179","endLine":1,"endColumn":36},{"ruleId":"176","severity":1,"message":"180","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":18},{"ruleId":"176","severity":1,"message":"181","line":3,"column":20,"nodeType":"178","messageId":"179","endLine":3,"endColumn":31},{"ruleId":"176","severity":1,"message":"182","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":18},{"ruleId":"176","severity":1,"message":"183","line":7,"column":10,"nodeType":"178","messageId":"179","endLine":7,"endColumn":14},{"ruleId":"176","severity":1,"message":"184","line":7,"column":16,"nodeType":"178","messageId":"179","endLine":7,"endColumn":24},{"ruleId":"176","severity":1,"message":"185","line":7,"column":26,"nodeType":"178","messageId":"179","endLine":7,"endColumn":31},{"ruleId":"176","severity":1,"message":"186","line":7,"column":59,"nodeType":"178","messageId":"179","endLine":7,"endColumn":65},{"ruleId":"176","severity":1,"message":"187","line":8,"column":5,"nodeType":"178","messageId":"179","endLine":8,"endColumn":11},{"ruleId":"176","severity":1,"message":"188","line":8,"column":13,"nodeType":"178","messageId":"179","endLine":8,"endColumn":16},{"ruleId":"176","severity":1,"message":"189","line":8,"column":18,"nodeType":"178","messageId":"179","endLine":8,"endColumn":21},{"ruleId":"176","severity":1,"message":"190","line":8,"column":31,"nodeType":"178","messageId":"179","endLine":8,"endColumn":41},{"ruleId":"176","severity":1,"message":"191","line":9,"column":26,"nodeType":"178","messageId":"179","endLine":9,"endColumn":39},{"ruleId":"176","severity":1,"message":"192","line":9,"column":41,"nodeType":"178","messageId":"179","endLine":9,"endColumn":53},{"ruleId":"176","severity":1,"message":"193","line":9,"column":69,"nodeType":"178","messageId":"179","endLine":9,"endColumn":84},{"ruleId":"176","severity":1,"message":"194","line":9,"column":107,"nodeType":"178","messageId":"179","endLine":9,"endColumn":119},{"ruleId":"176","severity":1,"message":"195","line":16,"column":5,"nodeType":"178","messageId":"179","endLine":16,"endColumn":19},{"ruleId":"176","severity":1,"message":"196","line":31,"column":1,"nodeType":"178","messageId":"179","endLine":31,"endColumn":15},{"ruleId":"176","severity":1,"message":"197","line":37,"column":9,"nodeType":"178","messageId":"179","endLine":37,"endColumn":16},{"ruleId":"176","severity":1,"message":"198","line":38,"column":26,"nodeType":"178","messageId":"179","endLine":38,"endColumn":32},{"ruleId":"176","severity":1,"message":"199","line":39,"column":9,"nodeType":"178","messageId":"179","endLine":39,"endColumn":15},{"ruleId":"176","severity":1,"message":"200","line":47,"column":18,"nodeType":"178","messageId":"179","endLine":47,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":108,"column":95,"nodeType":"203","messageId":"204","endLine":108,"endColumn":99},{"ruleId":"176","severity":1,"message":"205","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":27},{"ruleId":"176","severity":1,"message":"177","line":1,"column":39,"nodeType":"178","messageId":"179","endLine":1,"endColumn":48},{"ruleId":"176","severity":1,"message":"206","line":1,"column":50,"nodeType":"178","messageId":"179","endLine":1,"endColumn":56},{"ruleId":"176","severity":1,"message":"180","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"207","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":17},{"ruleId":"176","severity":1,"message":"184","line":4,"column":25,"nodeType":"178","messageId":"179","endLine":4,"endColumn":33},{"ruleId":"176","severity":1,"message":"185","line":4,"column":35,"nodeType":"178","messageId":"179","endLine":4,"endColumn":40},{"ruleId":"176","severity":1,"message":"208","line":4,"column":76,"nodeType":"178","messageId":"179","endLine":4,"endColumn":81},{"ruleId":"176","severity":1,"message":"209","line":4,"column":83,"nodeType":"178","messageId":"179","endLine":4,"endColumn":93},{"ruleId":"176","severity":1,"message":"210","line":5,"column":23,"nodeType":"178","messageId":"179","endLine":5,"endColumn":29},{"ruleId":"176","severity":1,"message":"211","line":5,"column":31,"nodeType":"178","messageId":"179","endLine":5,"endColumn":36},{"ruleId":"176","severity":1,"message":"192","line":8,"column":26,"nodeType":"178","messageId":"179","endLine":8,"endColumn":38},{"ruleId":"176","severity":1,"message":"193","line":8,"column":54,"nodeType":"178","messageId":"179","endLine":8,"endColumn":69},{"ruleId":"176","severity":1,"message":"194","line":8,"column":92,"nodeType":"178","messageId":"179","endLine":8,"endColumn":104},{"ruleId":"176","severity":1,"message":"196","line":15,"column":5,"nodeType":"178","messageId":"179","endLine":15,"endColumn":19},{"ruleId":"176","severity":1,"message":"195","line":16,"column":5,"nodeType":"178","messageId":"179","endLine":16,"endColumn":19},{"ruleId":"176","severity":1,"message":"198","line":32,"column":26,"nodeType":"178","messageId":"179","endLine":32,"endColumn":32},{"ruleId":"176","severity":1,"message":"200","line":38,"column":28,"nodeType":"178","messageId":"179","endLine":38,"endColumn":33},{"ruleId":"212","severity":1,"message":"213","line":149,"column":66,"nodeType":"214","endLine":149,"endColumn":70},{"ruleId":"176","severity":1,"message":"215","line":1,"column":38,"nodeType":"178","messageId":"179","endLine":1,"endColumn":49},{"ruleId":"176","severity":1,"message":"216","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":14},{"ruleId":"176","severity":1,"message":"217","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":16},{"ruleId":"176","severity":1,"message":"182","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":18},{"ruleId":"176","severity":1,"message":"218","line":7,"column":33,"nodeType":"178","messageId":"179","endLine":7,"endColumn":39},{"ruleId":"176","severity":1,"message":"219","line":7,"column":41,"nodeType":"178","messageId":"179","endLine":7,"endColumn":45},{"ruleId":"176","severity":1,"message":"220","line":7,"column":47,"nodeType":"178","messageId":"179","endLine":7,"endColumn":57},{"ruleId":"176","severity":1,"message":"210","line":8,"column":23,"nodeType":"178","messageId":"179","endLine":8,"endColumn":29},{"ruleId":"176","severity":1,"message":"190","line":8,"column":31,"nodeType":"178","messageId":"179","endLine":8,"endColumn":41},{"ruleId":"176","severity":1,"message":"193","line":9,"column":38,"nodeType":"178","messageId":"179","endLine":9,"endColumn":53},{"ruleId":"176","severity":1,"message":"221","line":9,"column":55,"nodeType":"178","messageId":"179","endLine":9,"endColumn":74},{"ruleId":"176","severity":1,"message":"194","line":9,"column":76,"nodeType":"178","messageId":"179","endLine":9,"endColumn":88},{"ruleId":"176","severity":1,"message":"222","line":12,"column":22,"nodeType":"178","messageId":"179","endLine":12,"endColumn":28},{"ruleId":"176","severity":1,"message":"223","line":13,"column":5,"nodeType":"178","messageId":"179","endLine":13,"endColumn":11},{"ruleId":"176","severity":1,"message":"224","line":14,"column":5,"nodeType":"178","messageId":"179","endLine":14,"endColumn":10},{"ruleId":"176","severity":1,"message":"225","line":15,"column":5,"nodeType":"178","messageId":"179","endLine":15,"endColumn":9},{"ruleId":"176","severity":1,"message":"226","line":16,"column":5,"nodeType":"178","messageId":"179","endLine":16,"endColumn":18},{"ruleId":"176","severity":1,"message":"227","line":17,"column":5,"nodeType":"178","messageId":"179","endLine":17,"endColumn":14},{"ruleId":"176","severity":1,"message":"228","line":19,"column":8,"nodeType":"178","messageId":"179","endLine":19,"endColumn":16},{"ruleId":"176","severity":1,"message":"229","line":56,"column":12,"nodeType":"178","messageId":"179","endLine":56,"endColumn":25},{"ruleId":"176","severity":1,"message":"230","line":56,"column":27,"nodeType":"178","messageId":"179","endLine":56,"endColumn":43},{"ruleId":"231","severity":1,"message":"232","line":68,"column":8,"nodeType":"233","endLine":68,"endColumn":20,"suggestions":"234"},{"ruleId":"231","severity":1,"message":"235","line":73,"column":8,"nodeType":"233","endLine":73,"endColumn":21,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":158,"column":25,"nodeType":"214","endLine":158,"endColumn":88},{"ruleId":"176","severity":1,"message":"177","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":26},{"ruleId":"176","severity":1,"message":"206","line":1,"column":28,"nodeType":"178","messageId":"179","endLine":1,"endColumn":34},{"ruleId":"176","severity":1,"message":"239","line":1,"column":36,"nodeType":"178","messageId":"179","endLine":1,"endColumn":44},{"ruleId":"176","severity":1,"message":"219","line":3,"column":25,"nodeType":"178","messageId":"179","endLine":3,"endColumn":29},{"ruleId":"176","severity":1,"message":"220","line":3,"column":31,"nodeType":"178","messageId":"179","endLine":3,"endColumn":41},{"ruleId":"176","severity":1,"message":"186","line":3,"column":43,"nodeType":"178","messageId":"179","endLine":3,"endColumn":49},{"ruleId":"176","severity":1,"message":"240","line":3,"column":51,"nodeType":"178","messageId":"179","endLine":3,"endColumn":55},{"ruleId":"176","severity":1,"message":"241","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":21},{"ruleId":"176","severity":1,"message":"242","line":4,"column":23,"nodeType":"178","messageId":"179","endLine":4,"endColumn":36},{"ruleId":"176","severity":1,"message":"243","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":15},{"ruleId":"176","severity":1,"message":"244","line":6,"column":17,"nodeType":"178","messageId":"179","endLine":6,"endColumn":24},{"ruleId":"176","severity":1,"message":"198","line":6,"column":26,"nodeType":"178","messageId":"179","endLine":6,"endColumn":32},{"ruleId":"176","severity":1,"message":"245","line":6,"column":34,"nodeType":"178","messageId":"179","endLine":6,"endColumn":39},{"ruleId":"176","severity":1,"message":"246","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":13},{"ruleId":"176","severity":1,"message":"206","line":1,"column":28,"nodeType":"178","messageId":"179","endLine":1,"endColumn":34},{"ruleId":"176","severity":1,"message":"239","line":1,"column":36,"nodeType":"178","messageId":"179","endLine":1,"endColumn":44},{"ruleId":"176","severity":1,"message":"181","line":2,"column":20,"nodeType":"178","messageId":"179","endLine":2,"endColumn":31},{"ruleId":"247","severity":1,"message":"248","line":43,"column":21,"nodeType":"249","messageId":"250","endLine":43,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":47,"column":21,"nodeType":"249","messageId":"250","endLine":47,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":55,"column":21,"nodeType":"249","messageId":"250","endLine":55,"endColumn":26},{"ruleId":"176","severity":1,"message":"181","line":2,"column":20,"nodeType":"178","messageId":"179","endLine":2,"endColumn":31},{"ruleId":"176","severity":1,"message":"251","line":7,"column":8,"nodeType":"178","messageId":"179","endLine":7,"endColumn":11},{"ruleId":"176","severity":1,"message":"252","line":29,"column":33,"nodeType":"178","messageId":"179","endLine":29,"endColumn":40},{"ruleId":"176","severity":1,"message":"253","line":42,"column":12,"nodeType":"178","messageId":"179","endLine":42,"endColumn":16},{"ruleId":"231","severity":1,"message":"254","line":79,"column":8,"nodeType":"233","endLine":79,"endColumn":13,"suggestions":"255"},{"ruleId":"231","severity":1,"message":"256","line":101,"column":7,"nodeType":"233","endLine":101,"endColumn":27,"suggestions":"257"},{"ruleId":"231","severity":1,"message":"258","line":124,"column":8,"nodeType":"233","endLine":124,"endColumn":43,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":128,"column":26,"nodeType":"262","messageId":"263","endLine":128,"endColumn":28},{"ruleId":"247","severity":1,"message":"248","line":174,"column":21,"nodeType":"249","messageId":"250","endLine":174,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":183,"column":21,"nodeType":"249","messageId":"250","endLine":183,"endColumn":26},{"ruleId":"231","severity":1,"message":"264","line":190,"column":8,"nodeType":"233","endLine":190,"endColumn":13,"suggestions":"265"},{"ruleId":"176","severity":1,"message":"177","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":26},{"ruleId":"176","severity":1,"message":"206","line":1,"column":28,"nodeType":"178","messageId":"179","endLine":1,"endColumn":34},{"ruleId":"176","severity":1,"message":"180","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"219","line":4,"column":25,"nodeType":"178","messageId":"179","endLine":4,"endColumn":29},{"ruleId":"176","severity":1,"message":"220","line":4,"column":31,"nodeType":"178","messageId":"179","endLine":4,"endColumn":41},{"ruleId":"176","severity":1,"message":"241","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":21},{"ruleId":"176","severity":1,"message":"242","line":5,"column":23,"nodeType":"178","messageId":"179","endLine":5,"endColumn":36},{"ruleId":"176","severity":1,"message":"266","line":7,"column":8,"nodeType":"178","messageId":"179","endLine":7,"endColumn":15},{"ruleId":"176","severity":1,"message":"243","line":22,"column":9,"nodeType":"178","messageId":"179","endLine":22,"endColumn":15},{"ruleId":"176","severity":1,"message":"244","line":22,"column":17,"nodeType":"178","messageId":"179","endLine":22,"endColumn":24},{"ruleId":"176","severity":1,"message":"198","line":22,"column":26,"nodeType":"178","messageId":"179","endLine":22,"endColumn":32},{"ruleId":"176","severity":1,"message":"245","line":22,"column":34,"nodeType":"178","messageId":"179","endLine":22,"endColumn":39},{"ruleId":"176","severity":1,"message":"267","line":25,"column":9,"nodeType":"178","messageId":"179","endLine":25,"endColumn":32},{"ruleId":"172","replacedBy":"268"},{"ruleId":"174","replacedBy":"269"},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'useMutation' is defined but never used.","'SearchInfo' is defined but never used.","'Form' is defined but never used.","'Checkbox' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Drawer' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'DatePicker' is defined but never used.","'HeartOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'PictureOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'USERPLAN_QUERY' is defined but never used.","'USERNAME_QUERY' is defined but never used.","'SubMenu' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Option' is assigned a value but never used.","'error' is assigned a value but never used.","no-dupe-keys","Duplicate key 'left'.","ObjectExpression","unexpected","'useContext' is defined but never used.","'useRef' is defined but never used.","'Tooltip' is defined but never used.","'Table' is defined but never used.","'Popconfirm' is defined but never used.","'Select' is defined but never used.","'Space' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useCallback' is defined but never used.","'MapBox' is defined but never used.","'AddPlace' is defined but never used.","'Layout' is defined but never used.","'Menu' is defined but never used.","'Breadcrumb' is defined but never used.","'EnvironmentOutlined' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'TourPlan' is defined but never used.","'showUsermMenu' is assigned a value but never used.","'setShowUsermMenu' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["272"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["273"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'Card' is defined but never used.","'TagOutlined' is defined but never used.","'CheckOutlined' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Sider' is assigned a value but never used.","'React' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'env' is defined but never used.","'markers' is assigned a value but never used.","'test' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'View.lat', 'View.lng', and 'View.zoom'. Either include them or remove the dependency array.",["274"],"React Hook useEffect has missing dependencies: 'insertionMode', 'setCurrentMarker', 'setInsertionMode', and 'setTitle'. Either include them or remove the dependency array. If 'setInsertionMode' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["275"],"React Hook useEffect has missing dependencies: 'setCurrentMarker', 'setDescription', and 'setTitle'. Either include them or remove the dependency array. If 'setTitle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["276"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'setCurrentMarker', 'setDescription', 'setTitle', 'subscribeToMore', and 'username'. Either include them or remove the dependency array. If 'setTitle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["277"],"'usePlan' is defined but never used.","'setCurrentMarkerContent' is assigned a value but never used.",["270"],["271"],"no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [history, signIndata]",{"range":"290","text":"291"},"Update the dependencies array to be: [signInError, username]",{"range":"292","text":"293"},"Update the dependencies array to be: [View.lat, View.lng, View.zoom, map]",{"range":"294","text":"295"},"Update the dependencies array to be: [map, currentMarker, setInsertionMode, setTitle, setCurrentMarker, insertionMode]",{"range":"296","text":"297"},"Update the dependencies array to be: [map, insertionMode, currentMarker, setTitle, setDescription, setCurrentMarker]",{"range":"298","text":"299"},"Update the dependencies array to be: [map, setCurrentMarker, setDescription, setTitle, subscribeToMore, username]",{"range":"300","text":"301"},[2288,2300],"[history, signIndata]",[2416,2429],"[signInError, username]",[2699,2704],"[View.lat, View.lng, View.zoom, map]",[3395,3415],"[map, currentMarker, setInsertionMode, setTitle, setCurrentMarker, insertionMode]",[4131,4166],"[map, insertionMode, currentMarker, setTitle, setDescription, setCurrentMarker]",[6831,6836],"[map, setCurrentMarker, setDescription, setTitle, subscribeToMore, username]"]